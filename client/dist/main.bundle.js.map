{"version":3,"sources":["./src/$_gendir lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.constants.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/admin/admin.component.css","./src/app/components/admin/admin.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/currency/currency.component.css","./src/app/components/currency/currency.component.html","./src/app/components/currency/currency.component.ts","./src/app/components/discussion/comment/comment-list/comment-list.component.css","./src/app/components/discussion/comment/comment-list/comment-list.component.html","./src/app/components/discussion/comment/comment-list/comment-list.component.ts","./src/app/components/discussion/discussion-create/discussion-create.component.css","./src/app/components/discussion/discussion-create/discussion-create.component.html","./src/app/components/discussion/discussion-create/discussion-create.component.ts","./src/app/components/discussion/discussion-edit/discussion-edit.component.css","./src/app/components/discussion/discussion-edit/discussion-edit.component.html","./src/app/components/discussion/discussion-edit/discussion-edit.component.ts","./src/app/components/discussion/discussion-list/discussion-list.component.css","./src/app/components/discussion/discussion-list/discussion-list.component.html","./src/app/components/discussion/discussion-list/discussion-list.component.ts","./src/app/components/discussion/discussion-view/discussion-view.component.css","./src/app/components/discussion/discussion-view/discussion-view.component.html","./src/app/components/discussion/discussion-view/discussion-view.component.ts","./src/app/components/discussion/discussion.component.css","./src/app/components/discussion/discussion.component.html","./src/app/components/discussion/discussion.component.ts","./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.css","./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.html","./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.ts","./src/app/components/fund/fund-list/fund-list.component.css","./src/app/components/fund/fund-list/fund-list.component.html","./src/app/components/fund/fund-list/fund-list.component.ts","./src/app/components/home/home.component.css","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/pipes/filter-currency.pipe.ts","./src/app/components/portfolio/portfolio.component.css","./src/app/components/portfolio/portfolio.component.html","./src/app/components/portfolio/portfolio.component.ts","./src/app/components/shared/alert/alert.component.css","./src/app/components/shared/alert/alert.component.html","./src/app/components/shared/alert/alert.component.ts","./src/app/components/shared/loader/loader.component.css","./src/app/components/shared/loader/loader.component.html","./src/app/components/shared/loader/loader.component.ts","./src/app/components/shared/nav/nav.component.css","./src/app/components/shared/nav/nav.component.html","./src/app/components/shared/nav/nav.component.ts","./src/app/components/user/login/login.component.css","./src/app/components/user/login/login.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/profile/profile.component.css","./src/app/components/user/profile/profile.component.html","./src/app/components/user/profile/profile.component.ts","./src/app/components/user/register/register.component.css","./src/app/components/user/register/register.component.html","./src/app/components/user/register/register.component.ts","./src/app/directives/screen-height.directive.ts","./src/app/model/model.ts","./src/app/services/auth.service.ts","./src/app/services/comment.service.ts","./src/app/services/currency.service.ts","./src/app/services/discussion.service.ts","./src/app/services/error-handler.service.ts","./src/app/services/fund.service.ts","./src/app/services/interaction.service.ts","./src/app/services/portfolio.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-nav></app-nav>\\r\\n\\r\\n<app-alert></app-alert>\\r\\n\\r\\n<div class=\\\"container-fluid mt-3\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-loader></app-loader>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { environment } from '../environments/environment';\r\n\r\nexport class AppConstants {\r\n    public static EVENTS = {\r\n        showAlert: 'showAlert',\r\n        hideAlert: 'hideAlert',\r\n        showLoader: 'showLoader',\r\n        loginChange: 'loginChange',\r\n        showFeeds: 'showFeeds'\r\n    };\r\n\r\n    public static ENDPOINT = environment.endpoint;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.constants.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routing } from './app.routing';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { AlertComponent } from './components/shared/alert/alert.component';\nimport { LoaderComponent } from './components/shared/loader/loader.component';\nimport { NavComponent } from './components/shared/nav/nav.component';\nimport { PortfolioComponent } from './components/portfolio/portfolio.component';\n\nimport { InteractionService } from './services/interaction.service';\nimport { UserService } from './services/user.service';\nimport { AuthService } from './services/auth.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { PortfolioService } from './services/portfolio.service';\nimport { CurrencyService } from './services/currency.service';\nimport { CurrencyComponent } from './components/currency/currency.component';\nimport { FundBuySellComponent } from './components/fund/fund-buy-sell/fund-buy-sell.component';\nimport { FundService } from './services/fund.service';\nimport { FundListComponent } from './components/fund/fund-list/fund-list.component';\nimport { DiscussionService } from './services/discussion.service';\nimport { DiscussionComponent } from './components/discussion/discussion.component';\nimport { DiscussionListComponent } from './components/discussion/discussion-list/discussion-list.component';\nimport { DiscussionViewComponent } from './components/discussion/discussion-view/discussion-view.component';\nimport { DiscussionEditComponent } from './components/discussion/discussion-edit/discussion-edit.component';\nimport { DiscussionCreateComponent } from './components/discussion/discussion-create/discussion-create.component';\nimport { CommentService } from './services/comment.service';\nimport { CommentListComponent } from './components/discussion/comment/comment-list/comment-list.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/user/profile/profile.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { FilterCurrencyPipe } from './components/pipes/filter-currency.pipe';\nimport { ScreenHeightDirective } from './directives/screen-height.directive';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AlertComponent,\n    LoaderComponent,\n    NavComponent,\n    PortfolioComponent,\n    CurrencyComponent,\n    FundBuySellComponent,\n    FundListComponent,\n    DiscussionComponent,\n    DiscussionListComponent,\n    DiscussionViewComponent,\n    DiscussionEditComponent,\n    DiscussionCreateComponent,\n    CommentListComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent,\n    AdminComponent,\n    FilterCurrencyPipe,\n    ScreenHeightDirective\n  ],\n  imports: [\n    BrowserModule,\n    Routing,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    InteractionService,\n    AuthService,\n    ErrorHandlerService,\n    UserService,\n    PortfolioService,\n    CurrencyService,\n    FundService,\n    DiscussionService,\n    CommentService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { ModuleWithProviders } from '@angular/core';\r\n\r\nimport { LoginComponent } from './components/user/login/login.component';\r\nimport { PortfolioComponent } from './components/portfolio/portfolio.component';\r\nimport { DiscussionComponent } from './components/discussion/discussion.component';\r\nimport { RegisterComponent } from './components/user/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { ProfileComponent } from './components/user/profile/profile.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\nconst APP_ROUTES: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'profile', component: ProfileComponent, canActivate: [AuthService] },\r\n    { path: 'portfolio', component: PortfolioComponent, canActivate: [AuthService] },\r\n    { path: 'discussion', component: DiscussionComponent },\r\n    { path: 'discussion/:discussionId', component: DiscussionComponent },\r\n    { path: 'admin', component: AdminComponent, canActivate: [AuthService] }\r\n];\r\n\r\n// Export the routes as module providers\r\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/admin/admin.component.css\n// module id = ./src/app/components/admin/admin.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <h3 class=\\\"font-weight-light\\\">\\n        <i class=\\\"fas fa-bolt mr-2\\\"></i> Admin\\n    </h3>\\n    <hr>\\n\\n    <div class=\\\"row mt-2\\\">\\n        <!-- user list -->\\n        <div class=\\\"col-5\\\">\\n            <dd>USERS</dd>\\n            <div appScreenHeight>\\n                <ul class=\\\"list-group shadow\\\">\\n                    <li class=\\\"list-group-item list-group-item-action\\\"\\n                        *ngFor=\\\"let thisUser of users\\\"\\n                        [ngClass]=\\\"{'list-group-item-primary': thisUser === selectedUser}\\\"\\n                        (click)=\\\"selectUser(thisUser)\\\">\\n                        <span class=\\\"float-left\\\">\\n                      <i *ngIf=\\\"thisUser.userType==='user'\\\"\\n                      class=\\\"fas fa-user-circle fa-lg text-muted\\\"></i>\\n                      <i *ngIf=\\\"thisUser.userType==='expert'\\\"\\n                      class=\\\"fas fa-street-view fa-lg text-success\\\"></i>\\n                      <i *ngIf=\\\"thisUser.userType==='admin'\\\"\\n                      class=\\\"fas fa-bolt fa-lg text-warning\\\"></i>\\n                  </span>\\n                        <span class=\\\"pl-3 mr-2\\\">{{thisUser.name}}</span> <span class=\\\"font-italic text-primary small\\\">@{{thisUser.username}}</span>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <!-- user edit / create -->\\n        <div class=\\\"col border border-bottom-0 border-right-0 border-top-0\\\">\\n            <span *ngIf=\\\"selectedUser\\\"\\n                  class=\\\"btn btn-outline-success float-right btn-sm\\\"\\n                  (click)=\\\"resetForm()\\\">\\n              <i class=\\\"fas fa-plus\\\"></i> NEW USER\\n            </span>\\n            <dd *ngIf=\\\"selectedUser\\\">EDIT <span class=\\\"text-primary\\\">@{{selectedUser.username}}</span></dd>\\n            <dd *ngIf=\\\"!selectedUser\\\">NEW USER</dd>\\n\\n            <form class=\\\"form shadow mt-3 p-3 border rounded\\\"\\n                  (ngSubmit)=\\\"updateUser()\\\"\\n                  #updateUserForm=\\\"ngForm\\\">\\n\\n                <!-- Username -->\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label small text-dark\\\"\\n                           for=\\\"name\\\">USERNAME</label>\\n                    <input placeholder=\\\"Username\\\"\\n                           type=\\\"text\\\"\\n                           class=\\\"form-control form-control-sm py-1\\\"\\n                           name=\\\"userNameField\\\"\\n                           [(ngModel)]=\\\"username\\\"\\n                           #nameField=\\\"ngModel\\\"\\n                           required/>\\n                </div>\\n\\n                <!-- User Type -->\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label small text-dark\\\"\\n                           for=\\\"name\\\">USER TYPE</label>\\n                    <div class=\\\"btn-group ml-3\\\"\\n                         role=\\\"group\\\">\\n                        <button type=\\\"button\\\"\\n                                [ngClass]=\\\"{'btn-primary' : userType === 'user'}\\\"\\n                                (click)=\\\"userType='user'\\\"\\n                                class=\\\"btn btn-sm \\\">USER</button>\\n                        <button type=\\\"button\\\"\\n                                [ngClass]=\\\"{'btn-primary' : userType === 'expert'}\\\"\\n                                (click)=\\\"userType='expert'\\\"\\n                                class=\\\"btn btn-sm \\\">EXPERT</button>\\n                        <button type=\\\"button\\\"\\n                                [ngClass]=\\\"{'btn-primary' : userType === 'admin'}\\\"\\n                                (click)=\\\"userType='admin'\\\"\\n                                class=\\\"btn btn-sm\\\">ADMIN</button>\\n                    </div>\\n                </div>\\n\\n                <!-- Name -->\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label small text-dark\\\"\\n                           for=\\\"name\\\">NAME</label>\\n                    <input placeholder=\\\"Name\\\"\\n                           type=\\\"text\\\"\\n                           class=\\\"form-control form-control-sm py-1\\\"\\n                           name=\\\"nameField\\\"\\n                           [(ngModel)]=\\\"name\\\"\\n                           #nameField=\\\"ngModel\\\" />\\n                </div>\\n\\n                <div class=\\\"row pt-2\\\">\\n                    <!-- Password -->\\n                    <div class=\\\"form-group col-sm-6 col-12\\\">\\n                        <label class=\\\"control-label small text-dark\\\"\\n                               for=\\\"password\\\">PASSWORD</label>\\n                        <input placeholder=\\\"*****\\\"\\n                               type=\\\"password\\\"\\n                               class=\\\"form-control form-control-sm py-1\\\"\\n                               name=\\\"passwordField\\\"\\n                               [(ngModel)]=\\\"password\\\"\\n                               #passwordField=\\\"ngModel\\\" />\\n                    </div>\\n\\n                    <!-- Verify Password -->\\n                    <div class=\\\"form-group col-sm-6 col-12\\\">\\n                        <label class=\\\"control-label small text-dark\\\"\\n                               for=\\\"name\\\">CONFIRM PASSWORD</label>\\n                        <input placeholder=\\\"******\\\"\\n                               type=\\\"password\\\"\\n                               class=\\\"form-control form-control-sm py-1\\\"\\n                               name=\\\"confirmPasswordField\\\"\\n                               [(ngModel)]=\\\"confirmPassword\\\"\\n                               #confirmPasswordField=\\\"ngModel\\\" />\\n                        <span *ngIf=\\\"confirmPassword !== password && confirmPasswordField.touched\\\"\\n                              class=\\\"text-danger ml-2 small\\\">Passwords do not match</span>\\n                    </div>\\n\\n                </div>\\n\\n                <!-- Email -->\\n                <div class=\\\"form-group pt-2\\\">\\n                    <label class=\\\"control-label small text-dark\\\"\\n                           for=\\\"name\\\">EMAIL</label>\\n                    <input placeholder=\\\"Email\\\"\\n                           type=\\\"text\\\"\\n                           class=\\\"form-control form-control-sm py-1\\\"\\n                           name=\\\"emailField\\\"\\n                           [(ngModel)]=\\\"email\\\"\\n                           #emailField=\\\"ngModel\\\" />\\n                </div>\\n\\n                <!-- form actions -->\\n                <div>\\n                    <button type=\\\"submit\\\"\\n                            class=\\\"btn btn-sm btn-primary py-1\\\"\\n                            [disabled]=\\\"updateUserForm.invalid || confirmPassword !== password\\\">\\n                          {{selectedUser? 'SAVE' : 'CREATE'}}\\n                          </button>\\n                    <span class=\\\"btn btn-sm btn-outline-danger py-1\\\"\\n                          (click)=\\\"deleteConfirmation=true\\\"\\n                          [hidden]=\\\"!selectedUser || deleteConfirmation\\\">\\n                       Delete\\n                        </span>\\n                    <span class=\\\"btn btn-sm btn-outline-danger py-1\\\"\\n                          (click)=\\\"deleteUser()\\\"\\n                          [hidden]=\\\"!selectedUser || !deleteConfirmation\\\">\\n                       Sure?\\n                      </span>\\n                </div>\\n                <!-- /form actions -->\\n            </form>\\n            <!--/form-->\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/admin/admin.component.html\n// module id = ./src/app/components/admin/admin.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../model/model';\nimport { UserService } from '../../services/user.service';\nimport { AuthService } from '../../services/auth.service';\nimport { InteractionService } from '../../services/interaction.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  private users: User[];\n  private currentUser: User;\n  private selectedUser: User;\n\n  private username: string;\n  private name: string;\n  private password: string;\n  private confirmPassword: string;\n  private email: string;\n  private userType: string;\n  private deleteConfirmation: Boolean;\n\n  constructor(private userService: UserService,\n    private authService: AuthService,\n    private interactionService: InteractionService,\n    private errorHandler: ErrorHandlerService) { }\n\n  ngOnInit() {\n    this.currentUser = this.authService.getLoggedInUser();\n    if (this.currentUser.userType !== 'admin') {\n      this.interactionService.showAlert('Unauthorized. You do not have admin access', 'danger');\n    } else {\n      this.getAllUsers();\n    }\n    this.userType = 'user';\n  }\n\n  getAllUsers() {\n    this.deleteConfirmation = false;\n    this.interactionService.showLoader(true);\n    this.userService.getAllUsers()\n      .subscribe((users) => {\n        this.users = users.filter((u) => u._id !== this.currentUser._id);\n        this.interactionService.showLoader(false);\n      });\n  }\n\n  selectUser(user) {\n    this.deleteConfirmation = false;\n    this.selectedUser = user;\n    this.username = this.selectedUser.username;\n    this.name = this.selectedUser.name;\n    this.email = this.selectedUser.email;\n    this.userType = this.selectedUser.userType;\n  }\n\n  resetForm() {\n    this.selectedUser = null;\n    this.username = '';\n    this.name = '';\n    this.email = '';\n    this.userType = 'user';\n    this.deleteConfirmation = false;\n  }\n\n  updateUser() {\n    const updateUser = {\n      _id: null,\n      username: this.username,\n      name: this.name || '',\n      password: this.password,\n      email: this.email || '',\n      userType: this.userType\n    };\n\n    this.interactionService.showLoader(true);\n\n    if (this.selectedUser) {\n      // update user\n      updateUser._id = this.selectedUser._id;\n\n      this.userService.updateUser(this.selectedUser._id, updateUser)\n        .subscribe((updatedUser) => {\n          this.interactionService.showAlert('Update successful', 'success', true);\n          this.getAllUsers();\n        }, (err) => {\n          this.errorHandler.handleError('Error updating user', err);\n        });\n    } else {\n      // create user\n      this.userService.createUser(updateUser)\n        .subscribe((createdUser) => {\n          this.users.splice(0, 0, createdUser);\n          this.selectedUser = createdUser;\n          this.interactionService.showLoader(false);\n        }, (err) => {\n          this.errorHandler.handleError('Error creating user', err);\n        });\n    }\n  }\n\n  deleteUser() {\n    this.interactionService.showLoader(true);\n    this.userService.deleteUser(this.selectedUser._id)\n      .subscribe((deletedUser) => {\n        this.interactionService.showAlert('User deleted successfully', 'success', true);\n        this.getAllUsers();\n      }, (err) => {\n        this.errorHandler.handleError('Error deleting user', err);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/admin/admin.component.ts","module.exports = \".cc {\\r\\n    font-size: 24px;\\r\\n    vertical-align: text-top;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/currency/currency.component.css\n// module id = ./src/app/components/currency/currency.component.css\n// module chunks = main","module.exports = \"<div class=\\\"form-group mb-1\\\">\\n\\n    <input type=\\\"text\\\"\\n           placeholder=\\\"Search Currency\\\"\\n           class=\\\"form-control form-control-sm w-50 ml-auto\\\"\\n           [(ngModel)]=\\\"currencySearch\\\">\\n\\n</div>\\n<div class=\\\"scroll-container border border-left-0 border-right-0 rounded shadow\\\"\\n     appScreenHeight>\\n    <ul class=\\\"list-group shadow rounded\\\">\\n        <li *ngFor=\\\"let thisCurrency of currency | filterCurrency: currencySearch\\\"\\n            class=\\\"list-group-item\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-1\\\">\\n                    <i class=\\\"cc {{thisCurrency.symbol.toUpperCase()}}\\\"></i>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <div>\\n                        <span>{{thisCurrency.name}} </span>\\n                        <!-- <span>|</span> -->\\n                        <span class=\\\"badge badge-primary text-monospace small font-weight-bold\\\">{{thisCurrency.symbol}}</span>\\n                    </div>\\n                    <div>\\n                        <span class=\\\"text-muted small\\\"\\n                              title=\\\"Rank\\\">Rank #{{thisCurrency.rank}}</span>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"btn btn-outline-success py-2 float-right mt-1\\\"\\n                         (click)=\\\"onCurrencySelect(thisCurrency)\\\"\\n                         title=\\\"buy\\\">\\n                        <span>$ {{thisCurrency.value.toFixed(3)}}</span>\\n                        <span class=\\\"fas fa-shopping-cart\\\"></span>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </li>\\n        <li class=\\\"list-group-item\\\"\\n            *ngIf=\\\"(currency | filterCurrency: currencySearch).length == 0\\\">\\n            <i>No currency found</i>\\n        </li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/currency/currency.component.html\n// module id = ./src/app/components/currency/currency.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { CurrencyService } from '../../services/currency.service';\nimport { Currency } from '../../model/model';\nimport { FilterCurrencyPipe } from '../pipes/filter-currency.pipe';\n\n@Component({\n  selector: 'app-currency-list',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.css']\n})\nexport class CurrencyComponent implements OnInit {\n\n  @Output() onSelect: EventEmitter<Currency> = new EventEmitter<Currency>();\n\n  constructor(private currencyService: CurrencyService) {\n  }\n  objectKeys = Object.keys;\n  private currency: Currency[];\n\n  ngOnInit() {\n    this.currencyService.getCurrency()\n      .subscribe((result) => {\n        this.currency = Object.values(result);\n      }, (err) => {\n        console.log('Error retrieving currency values', err);\n      });\n  }\n\n  onCurrencySelect(selectedCurrency: Currency) {\n    console.log(selectedCurrency);\n    this.onSelect.emit(selectedCurrency);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/currency/currency.component.ts","module.exports = \".create-comment {\\r\\n    background-color: #f3f3f3;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/comment/comment-list/comment-list.component.css\n// module id = ./src/app/components/discussion/comment/comment-list/comment-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"comments\\\">\\n    <div *ngIf=\\\"currentUser\\\"\\n         class=\\\"create-comment border border-left-0 border-right-0 border-top-0 shadow-sm rounded p-3\\\">\\n\\n        <form class=\\\"form\\\"\\n              (ngSubmit)=\\\"createComment()\\\"\\n              #expertCommentForm=\\\"ngForm\\\">\\n\\n            <textarea placeholder=\\\"{{isUserExpert? 'Expert Answer' : 'Type here...' }}\\\"\\n                      class=\\\"form-control form-control-sm h-100 pt-1\\\"\\n                      name=\\\"newCommentField\\\"\\n                      [(ngModel)]=\\\"newComment\\\"\\n                      #newExpertCommentField=\\\"ngModel\\\"></textarea>\\n            <button class=\\\"btn btn-outline-primary btn-sm mt-2\\\"\\n                    [disabled]=\\\"requestInProgress\\\"\\n                    type=\\\"submit\\\">\\n                                   <i class=\\\"fas fa-plus mr-2\\\"></i> \\n                                   {{isUserExpert? 'Post Expert Answer' : 'Post Comment' }}\\n                        </button>\\n            <span class=\\\"small text-primary font-italic ml-2 align-bottom\\\">{{requestStatus}}</span>\\n\\n        </form>\\n    </div>\\n\\n    <!-- Expert Answers -->\\n    <dd class=\\\"text-primary font-weight-bold small mt-3\\\">EXPERT ANSWERS</dd>\\n    <div class=\\\"expert-comments pl-4 mt-1 border border-left-0 border-right-0 border-bottom-0 border-primary\\\">\\n        <div class=\\\"mt-3 small font-italic text-muted\\\"\\n             *ngIf=\\\"expertComments.length === 0\\\">\\n            No expert answers available\\n        </div>\\n        <div class=\\\"shadow-sm border rounded border-primary border-top-0 border-right-0 border-bottom-0 p-3 my-3\\\"\\n             *ngFor=\\\"let thisComment of expertComments\\\">\\n            <div>\\n                {{thisComment.text}}\\n            </div>\\n            <div class=\\\"small text-primary mt-1\\\">\\n                <span class=\\\"mr-2 font-italic\\\">@{{thisComment.createdBy}} </span>\\n                <span *ngIf=\\\"currentUser && (thisComment.createdBy === currentUser.username || currentUser.userType === 'admin')\\\">\\n                <span class=\\\"btn btn-sm btn-outline-danger badge py-1 px-1\\\"\\n                      [hidden]=\\\"deleteConfirmations[thisComment._id]\\\"\\n                      (click)=\\\"deleteConfirmations[thisComment._id] = true\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> DELETE\\n                </span>\\n                <span class=\\\"btn btn-sm btn-outline-danger badge py-1 px-1\\\"\\n                      [hidden]=\\\"!deleteConfirmations[thisComment._id]\\\"\\n                      (click)=\\\"deleteComment(thisComment)\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> SURE?\\n                </span>\\n                </span>\\n\\n                <span class=\\\"ml-2 text-muted float-right\\\">{{thisComment.dateCreated.toLocaleString()}} </span>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <!-- User Comments -->\\n    <dd class=\\\"text-muted font-weight-bold small mt-3\\\">USER COMMENTS</dd>\\n    <div class=\\\"user-comments pl-4 mt-1 border border-left-0 border-right-0 border-bottom-0\\\">\\n        <div class=\\\"mt-3 small font-italic text-muted\\\"\\n             *ngIf=\\\"userComments.length === 0\\\">\\n            No user comments available\\n        </div>\\n        <div class=\\\"shadow-sm border rounded border-top-0 border-right-0 border-bottom-0 p-3 my-3\\\"\\n             *ngFor=\\\"let thisComment of userComments\\\">\\n            <div>\\n                {{thisComment.text}}\\n            </div>\\n            <div class=\\\"small text-dark mt-1\\\">\\n                <span class=\\\"mr-2 font-italic text-muted\\\">@{{thisComment.createdBy}} </span>\\n                <span *ngIf=\\\"currentUser && (thisComment.createdBy === currentUser.username || currentUser.userType === 'admin')\\\">\\n                <span class=\\\"btn btn-sm btn-outline-danger badge py-1 px-1\\\"\\n                      [hidden]=\\\"deleteConfirmations[thisComment._id]\\\"\\n                      (click)=\\\"deleteConfirmations[thisComment._id] = true\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> DELETE\\n                </span>\\n                <span class=\\\"btn btn-sm btn-outline-danger badge py-1 px-1\\\"\\n                      [hidden]=\\\"!deleteConfirmations[thisComment._id]\\\"\\n                      (click)=\\\"deleteComment(thisComment)\\\">\\n                    <i class=\\\"fas fa-times\\\"></i> SURE?\\n                </span>\\n                </span>\\n\\n                <span class=\\\"ml-2 text-muted float-right\\\">{{thisComment.dateCreated.toLocaleString()}} </span>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/comment/comment-list/comment-list.component.html\n// module id = ./src/app/components/discussion/comment/comment-list/comment-list.component.html\n// module chunks = main","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { CommentService } from '../../../../services/comment.service';\nimport { Comment, User } from '../../../../model/model';\nimport { AuthService } from '../../../../services/auth.service';\nimport { ErrorHandlerService } from '../../../../services/error-handler.service';\n\n@Component({\n  selector: 'app-comment-list',\n  templateUrl: './comment-list.component.html',\n  styleUrls: ['./comment-list.component.css']\n})\nexport class CommentListComponent implements OnInit, OnChanges {\n\n  @Input() discussionId: string;\n  private expertComments: Comment[] = [];\n  private userComments: Comment[] = [];\n  private isUserExpert: Boolean;\n  private currentUser: User;\n  private newComment: string;\n  private requestInProgress: Boolean;\n  private requestStatus: string;\n  private deleteConfirmations: any = {};\n\n  constructor(private commentService: CommentService,\n    private authService: AuthService,\n    private errorHandler: ErrorHandlerService) { }\n\n  ngOnInit() {\n    this.getComments();\n    this.currentUser = this.authService.getLoggedInUser();\n    if (this.currentUser) {\n      this.isUserExpert = this.currentUser.userType === 'expert';\n    }\n  }\n\n  ngOnChanges(): void {\n    this.getComments();\n  }\n\n\n  getComments() {\n    if (this.discussionId) {\n      this.commentService.getComments(this.discussionId)\n        .subscribe((comments) => {\n          console.log(comments);\n          this.expertComments = [];\n          this.userComments = [];\n          comments.forEach((c) => {\n            c.dateCreated = new Date(c.dateCreated);\n            if (c.isExpertAnswer) {\n              this.expertComments.push(c);\n            } else {\n              this.userComments.push(c);\n            }\n          });\n        });\n    }\n  }\n\n  createComment() {\n    if (!this.newComment || this.requestInProgress) {\n      return;\n    }\n\n    this.requestInProgress = true;\n    this.requestStatus = 'Posting...';\n    const newComment = {\n      text: this.newComment\n    };\n\n    this.commentService.createComment(newComment, this.discussionId)\n      .subscribe((createdComment) => {\n        this.requestInProgress = false;\n        this.newComment = '';\n        this.requestStatus = 'Done!';\n        if (createdComment.isExpertAnswer) {\n          this.expertComments.splice(0, 0, createdComment);\n        } else {\n          this.userComments.splice(0, 0, createdComment);\n        }\n      }, (err) => {\n        this.requestInProgress = false;\n        this.requestStatus = 'Error posting answer. Try again';\n        this.errorHandler.handleError('Error posting answer', err);\n      });\n\n  }\n\n  deleteComment(comment) {\n    this.commentService.deleteComment(comment, this.discussionId)\n      .subscribe((success) => {\n        if (success) {\n          this.getComments();\n        }\n      }, (err) => {\n        this.errorHandler.handleError('Error deleting comment', err);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/discussion/comment/comment-list/comment-list.component.ts","module.exports = \".title-field {\\r\\n    font-size: 20px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-create/discussion-create.component.css\n// module id = ./src/app/components/discussion/discussion-create/discussion-create.component.css\n// module chunks = main","module.exports = \"<div>\\n    <form class=\\\"form\\\"\\n          (ngSubmit)=\\\"createDiscussion(newDiscussionForm)\\\"\\n          #newDiscussionForm=\\\"ngForm\\\">\\n        <!-- Title -->\\n        <div class=\\\"form-group\\\">\\n            <input placeholder=\\\"Title\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control form-control-lg title-field\\\"\\n                   name=\\\"titleField\\\"\\n                   [(ngModel)]=\\\"title\\\"\\n                   #titleField=\\\"ngModel\\\"\\n                   [ngClass]=\\\"{'border-danger': !titleField.valid && titleField.touched}\\\"\\n                   required />\\n            <span *ngIf=\\\"titleField.invalid && titleField.touched\\\"\\n                  class=\\\"text-danger ml-2\\\">Title is required</span>\\n        </div>\\n\\n        <!-- Description -->\\n        <div class=\\\"form-group small\\\">\\n            <textarea placeholder=\\\"Description\\\"\\n                      rows=\\\"3\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      name=\\\"descriptionField\\\"\\n                      [(ngModel)]=\\\"description\\\"\\n                      #descriptionField=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{'border-danger': (!descriptionField.valid && descriptionField.touched)}\\\"> </textarea>\\n            <span *ngIf=\\\"descriptionField.invalid && descriptionField.touched\\\"\\n                  class=\\\"text-danger ml-2\\\">Description is required</span>\\n        </div>\\n\\n        <!-- form actions -->\\n        <div>\\n            <button type=\\\"submit\\\"\\n                    class=\\\"btn btn-sm btn-success mr-2\\\"\\n                    [disabled]=\\\"newDiscussionForm.invalid\\\">Create Discussion</button>\\n\\n        </div>\\n        <!-- /form actions -->\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-create/discussion-create.component.html\n// module id = ./src/app/components/discussion/discussion-create/discussion-create.component.html\n// module chunks = main","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Discussion } from '../../../model/model';\nimport { DiscussionService } from '../../../services/discussion.service';\n\n@Component({\n  selector: 'app-discussion-create',\n  templateUrl: './discussion-create.component.html',\n  styleUrls: ['./discussion-create.component.css']\n})\nexport class DiscussionCreateComponent implements OnInit {\n\n  @Output() onComplete: EventEmitter<Discussion> = new EventEmitter();\n  private title: string;\n  private description: string;\n\n  constructor(private discussionService: DiscussionService) { }\n\n  ngOnInit() {\n  }\n\n  createDiscussion(form) {\n\n    const newDiscussion = {\n      title: this.title,\n      description: this.description || ''\n    };\n\n    this.discussionService.createDiscussion(newDiscussion)\n      .subscribe((createdDiscussion) => {\n        form.resetForm();\n        this.onComplete.emit(createdDiscussion);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/discussion/discussion-create/discussion-create.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-edit/discussion-edit.component.css\n// module id = ./src/app/components/discussion/discussion-edit/discussion-edit.component.css\n// module chunks = main","module.exports = \"<div>\\n    <form class=\\\"form\\\"\\n          (ngSubmit)=\\\"updateDiscussion()\\\"\\n          #newDiscussionForm=\\\"ngForm\\\">\\n        <!-- Title -->\\n        <div class=\\\"form-group\\\">\\n            <input placeholder=\\\"Title\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control form-control-lg title-field\\\"\\n                   name=\\\"titleField\\\"\\n                   [(ngModel)]=\\\"title\\\"\\n                   #titleField=\\\"ngModel\\\"\\n                   [ngClass]=\\\"{'border-danger': !titleField.valid && titleField.touched}\\\"\\n                   required />\\n            <span *ngIf=\\\"titleField.invalid && titleField.touched\\\"\\n                  class=\\\"text-danger ml-2\\\">Title is required</span>\\n        </div>\\n\\n        <!-- Description -->\\n        <div class=\\\"form-group small\\\">\\n            <textarea placeholder=\\\"Description\\\"\\n                      rows=\\\"3\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      name=\\\"descriptionField\\\"\\n                      [(ngModel)]=\\\"description\\\"\\n                      #descriptionField=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{'border-danger': (!descriptionField.valid && descriptionField.touched)}\\\"\\n                      required> </textarea>\\n            <span *ngIf=\\\"descriptionField.invalid && descriptionField.touched\\\"\\n                  class=\\\"text-danger ml-2\\\">Description is required</span>\\n        </div>\\n\\n        <!-- form actions -->\\n        <div>\\n            <button type=\\\"submit\\\"\\n                    class=\\\"btn btn-sm btn-warning mr-2\\\"\\n                    [disabled]=\\\"newDiscussionForm.invalid\\\">Edit Discussion</button>\\n\\n        </div>\\n        <!-- /form actions -->\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-edit/discussion-edit.component.html\n// module id = ./src/app/components/discussion/discussion-edit/discussion-edit.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\nimport { Discussion } from '../../../model/model';\nimport { DiscussionService } from '../../../services/discussion.service';\nimport { InteractionService } from '../../../services/interaction.service';\n\n@Component({\n  selector: 'app-discussion-edit',\n  templateUrl: './discussion-edit.component.html',\n  styleUrls: ['./discussion-edit.component.css']\n})\nexport class DiscussionEditComponent implements OnInit, OnChanges {\n\n  @Output() onComplete: EventEmitter<Discussion> = new EventEmitter();\n  @Input() discussion: Discussion;\n  private title: string;\n  private description: string;\n\n  constructor(private discussionService: DiscussionService,\n    private interactionService: InteractionService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.title = this.discussion.title;\n    this.description = this.discussion.description;\n  }\n\n  updateDiscussion() {\n    this.discussion.title = this.title;\n    this.discussion.description = this.description;\n\n    this.discussionService.updateDiscussion(this.discussion)\n      .subscribe((updatedDiscussion) => {\n        if (updatedDiscussion) {\n          this.onComplete.emit(updatedDiscussion);\n        } else {\n          this.interactionService.showAlert('Unable to update discussion', 'danger');\n        }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/discussion/discussion-edit/discussion-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-list/discussion-list.component.css\n// module id = ./src/app/components/discussion/discussion-list/discussion-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"list-group w-100 shadow-sm\\\">\\n    <div class=\\\"list-group-item list-group-item-action\\\"\\n         *ngFor=\\\"let thisDiscussion of discussions\\\"\\n         [ngClass]=\\\"{'list-group-item-primary': selectedDiscussion=== thisDiscussion._id}\\\"\\n         (click)=\\\"openDisucssion(thisDiscussion)\\\">\\n\\n        <div class=\\\"font-weight-bold\\\">\\n            {{thisDiscussion.title}}\\n        </div>\\n        <div class=\\\"font-italic small mr-3\\\">\\n            {{thisDiscussion.description.substring(0, 100)}} {{thisDiscussion.description.length > 100 ? '...' : ''}}\\n        </div>\\n        <div class=\\\"float-right small font-italic text-primary\\\">\\n            @{{thisDiscussion.createdBy}}\\n        </div>\\n    </div>\\n    <div class=\\\"text-muted font-italic text-center my-3 py-3\\\"\\n         [hidden]=\\\"discussions && discussions.length > 0\\\">\\n        <br><br><br><br> No discussions available. <br> Create a discussion to connect with experts and peers\\n        <br><br><br><br>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-list/discussion-list.component.html\n// module id = ./src/app/components/discussion/discussion-list/discussion-list.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Discussion } from '../../../model/model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-discussion-list',\n  templateUrl: './discussion-list.component.html',\n  styleUrls: ['./discussion-list.component.css']\n})\nexport class DiscussionListComponent implements OnInit {\n\n  @Input() discussions: Discussion[];\n  private selectedDiscussion: string;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe((param) => {\n      this.selectedDiscussion = param.get('discussionId');\n    });\n  }\n\n  openDisucssion(discussion) {\n    this.router.navigate(['/discussion', discussion._id]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/discussion/discussion-list/discussion-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-view/discussion-view.component.css\n// module id = ./src/app/components/discussion/discussion-view/discussion-view.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"discussion\\\">\\n    <div class=\\\"scroll-container\\\"\\n         appScreenHeight\\n         [heightOffset]=\\\"20\\\">\\n        <div class=\\\"text-primary small font-italic mb-2\\\">@{{discussion.createdBy}}</div>\\n        <div class=\\\"h3\\\">\\n            {{discussion.title}}\\n        </div>\\n\\n        <div class=\\\"mt-2\\\">\\n            {{discussion.description}}\\n        </div>\\n\\n        <div class=\\\"mt-3 border border-bottom-0 border-left-0 border-right-0\\\">\\n            <app-comment-list [discussionId]=\\\"discussion._id\\\"></app-comment-list>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion-view/discussion-view.component.html\n// module id = ./src/app/components/discussion/discussion-view/discussion-view.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { Discussion } from '../../../model/model';\n\n@Component({\n  selector: 'app-discussion-view',\n  templateUrl: './discussion-view.component.html',\n  styleUrls: ['./discussion-view.component.css']\n})\nexport class DiscussionViewComponent implements OnInit {\n\n  @Input() discussion: Discussion;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/discussion/discussion-view/discussion-view.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion.component.css\n// module id = ./src/app/components/discussion/discussion.component.css\n// module chunks = main","module.exports = \"<div class=\\\"discussions\\\">\\n    <div class=\\\"row\\\">\\n\\n        <!-- left side bar -->\\n        <div class=\\\"col-4\\\">\\n            <div>\\n                <h3 class=\\\"font-weight-light\\\">\\n                    <i class=\\\"fas fa-comments mr-2\\\"></i>Discussions\\n                    <div class=\\\"btn btn-sm btn-success float-right\\\"\\n                         *ngIf=\\\"currentUser\\\"\\n                         (click)=\\\"openCreateDiscussionModal()\\\">\\n                        <i class=\\\"fas fa-plus\\\"></i> New\\n                    </div>\\n                </h3>\\n            </div>\\n            <div class=\\\"pt-2\\\">\\n                <div class=\\\"scroll-container\\\"\\n                     appScreenHeight\\n                     [heightOffset]=\\\"-15\\\">\\n                    <app-discussion-list [discussions]=\\\"discussions\\\"></app-discussion-list>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <!-- Main content -->\\n        <div class=\\\"col border border-top-0 border-bottom-0 border-right-0\\\">\\n            <div *ngIf=\\\"selectedDiscussion\\\">\\n\\n                <div class=\\\"float-right\\\"\\n                     *ngIf=\\\"currentUser && (currentUser.userType === 'admin' || currentUser.username === selectedDiscussion.createdBy)\\\">\\n                    <div class=\\\"btn btn-sm btn-outline-warning mr-1\\\"\\n                         (click)=\\\"openEditDiscussionModal(selectedDiscussion)\\\">\\n                        <i class=\\\"fas fa-edit mr-1\\\"></i> Edit\\n                    </div>\\n                    <div class=\\\"btn btn-sm btn-outline-danger\\\"\\n                         [hidden]=\\\"deleteConfirmation\\\"\\n                         (click)=\\\"deleteConfirmation=true\\\">\\n                        <i class=\\\"fas fa-times mr-1\\\"></i> Delete\\n                    </div>\\n                    <div class=\\\"btn btn-sm btn-outline-danger\\\"\\n                         [hidden]=\\\"!deleteConfirmation\\\"\\n                         (click)=\\\"deleteDiscussion(selectedDiscussion)\\\">\\n                        <i class=\\\"fas fa-times mr-1\\\"></i> Sure?\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"mr-2\\\"\\n                     appScreenHeight>\\n                    <app-discussion-view [discussion]=\\\"selectedDiscussion\\\"></app-discussion-view>\\n                </div>\\n            </div>\\n            <div [hidden]=\\\"selectedDiscussion\\\"\\n                 class=\\\"text-center w-100 mt-3\\\">\\n                <br><br><br>\\n                <i class=\\\"fas fa-comments fa-9x\\\"></i>\\n            </div>\\n        </div>\\n\\n    </div>\\n\\n    <!-- Create - Update modal -->\\n    <div class=\\\"modal fade\\\"\\n         id=\\\"createUpdateFundModal\\\">\\n        <div class=\\\"modal-dialog\\\"\\n             role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">\\n                        {{openModalTitle}} Discucssion\\n                    </h5>\\n                    <button type=\\\"button\\\"\\n                            class=\\\"close\\\"\\n                            data-dismiss=\\\"modal\\\"\\n                            aria-label=\\\"Close\\\">\\n                      <span aria-hidden=\\\"true\\\" class=\\\"small\\\">&times;</span>\\n                    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div *ngIf=\\\"openModalTitle == 'Create'\\\">\\n                        <app-discussion-create (onComplete)=\\\"onDiscussionCreated($event)\\\"></app-discussion-create>\\n                    </div>\\n                    <div *ngIf=\\\"openModalTitle == 'Edit'\\\">\\n                        <app-discussion-edit [discussion]=\\\"selectedDiscussion\\\"\\n                                             (onComplete)=\\\"onDiscussionUpdated($event)\\\"></app-discussion-edit>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/discussion/discussion.component.html\n// module id = ./src/app/components/discussion/discussion.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DiscussionService } from '../../services/discussion.service';\nimport { Discussion, User } from '../../model/model';\nimport { InteractionService } from '../../services/interaction.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\ndeclare const $;\n\n@Component({\n  selector: 'app-discussion',\n  templateUrl: './discussion.component.html',\n  styleUrls: ['./discussion.component.css']\n})\nexport class DiscussionComponent implements OnInit {\n\n  private discussions: Discussion[];\n  private openModalTitle: string;\n  private selectedDiscussion: Discussion;\n  private deleteConfirmation: Boolean;\n  private currentUser: User;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private discussionService: DiscussionService,\n    private interactionService: InteractionService,\n    private errorHandler: ErrorHandlerService,\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.currentUser = this.authService.getLoggedInUser();\n    this.getAllDiscussions();\n  }\n\n  getAllDiscussions() {\n\n    this.discussionService.getDiscussions()\n      .subscribe((discussions) => {\n        this.discussions = discussions;\n        this.activatedRoute.paramMap.subscribe((params) => {\n          const discussionId = params.get('discussionId');\n          if (!discussionId) {\n            if (this.discussions.length > 0) {\n              this.router.navigate(['/discussion', this.discussions[0]._id]);\n            }\n          } else {\n            this.deleteConfirmation = false;\n            this.selectedDiscussion = this.discussions.find((d) => {\n              return d._id === discussionId;\n            });\n            if (!this.selectedDiscussion) {\n              this.interactionService.showAlert('Discusssion with id ' + discussionId + 'does not exist', 'danger');\n            }\n          }\n        });\n      }, (err) => {\n        this.errorHandler.handleError('Error retrieving disucssions', err);\n      });\n  }\n\n  onDiscussionCreated(createdDiscussion) {\n    $('#createUpdateFundModal').modal('hide');\n    this.discussions.splice(0, 0, createdDiscussion);\n    this.router.navigate(['/discussion/' + createdDiscussion._id]);\n  }\n\n  onDiscussionUpdated(updatedDiscussion) {\n    $('#createUpdateFundModal').modal('hide');\n  }\n\n  openCreateDiscussionModal() {\n    this.openModalTitle = 'Create';\n    $('#createUpdateFundModal').modal('show');\n  }\n\n  openEditDiscussionModal() {\n    this.openModalTitle = 'Edit';\n    $('#createUpdateFundModal').modal('show');\n  }\n\n  deleteDiscussion(discussion) {\n    this.discussionService.deleteDiscussion(discussion)\n      .subscribe((deletedDiscussion) => {\n        this.interactionService.showAlert('Discussion deleted successfully', 'success');\n        this.router.navigate(['/discussion']);\n      }, (err) => {\n        this.errorHandler.handleError('Error deleting discussion', err);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/discussion/discussion.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.css\n// module id = ./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!portfolio\\\">Error: portfolio info needed</div>\\n<div *ngIf=\\\"currency && portfolio\\\">\\n    <div class=\\\"mb-3\\\">\\n        <h2>\\n            <i class=\\\"cc {{currency.symbol.toUpperCase()}}\\\"></i>\\n            <span>{{currency.name}} </span>\\n            <span>|</span>\\n            <span class=\\\"text-monospace small text-dark font-weight-bold\\\">{{currency.symbol}}</span>\\n        </h2>\\n    </div>\\n    <form class=\\\"form\\\"\\n          (ngSubmit)=\\\"buyFund()\\\"\\n          #buyForm=\\\"ngForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\"\\n                           for=\\\"quantity\\\">Quantity</label>\\n                    <input type=\\\"number\\\"\\n                           class=\\\"form-control py-1\\\"\\n                           name=\\\"quantity\\\"\\n                           [(ngModel)]=\\\"quantity\\\"\\n                           (keyup)=\\\"quantityChanged($event)\\\"\\n                           #quantityField=\\\"ngModel\\\"\\n                           [ngClass]=\\\"{'btn-outline-danger': quantityField.touched && !quantityField.valid }\\\"\\n                           required>\\n                </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"control-label\\\"\\n                           for=\\\"amount\\\">Amount ($)</label>\\n                    <input type=\\\"text\\\"\\n                           class=\\\"form-control py-1\\\"\\n                           name=\\\"amount\\\"\\n                           [(ngModel)]=\\\"amount\\\"\\n                           (keyup)=\\\"amountChanged($event)\\\"\\n                           #amountField=\\\"ngModel\\\"\\n                           [ngClass]=\\\"{'btn-outline-danger': quantityField.touched && !quantityField.valid }\\\"\\n                           required>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col small\\\">\\n                <span class=\\\"label bg-danger text-light rounded py-1 px-2 mr-2\\\"\\n                      *ngIf=\\\"error\\\">{{error}}</span>\\n                <span class=\\\"font-italic\\\"> you will have <b class=\\\"text-success\\\">${{willHaveAmount.toFixed(2)}}</b> after this purchase </span>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <button type=\\\"button\\\"\\n                        [disabled]=\\\"error\\\"\\n                        [hidden]=\\\"buyConfirmation\\\"\\n                        (click)=\\\"buyConfirmation=(true && !error)\\\"\\n                        class=\\\"btn btn-success btn-sm\\\">\\n                        <span *ngIf=\\\"isSell\\\">\\n                            <i class=\\\"fas fa-hand-holding-usd\\\"></i> Sell\\n                        </span>\\n                        <span *ngIf=\\\"!isSell\\\">\\n                            <i class=\\\"fas fa-shopping-cart\\\"></i> Buy\\n                        </span>\\n                 \\n                </button>\\n                <button type=\\\"submit\\\"\\n                        [hidden]=\\\"!buyConfirmation\\\"\\n                        class=\\\"btn btn-success btn-sm\\\">\\n                        <span *ngIf=\\\"isSell\\\">\\n                            <i class=\\\"fas fa-hand-holding-usd\\\"></i> Confirm Sell\\n                        </span>\\n                        <span *ngIf=\\\"!isSell\\\">\\n                            <i class=\\\"fas fa-shopping-cart\\\"></i> Confirm Buy\\n                        </span>\\n                </button>\\n                <button type=\\\"button\\\"\\n                        (click)=\\\"cancel()\\\"\\n                        class=\\\"btn btn-outline-danger btn-sm float-right\\\">\\n          Cancel\\n        </button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.html\n// module id = ./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.html\n// module chunks = main","import { Component, OnInit, OnChanges, Output, Input, EventEmitter } from '@angular/core';\nimport { Fund, Currency, Portfolio } from '../../../model/model';\nimport { FundService } from '../../../services/fund.service';\nimport { ErrorHandlerService } from '../../../services/error-handler.service';\n\n@Component({\n  selector: 'app-fund-buy-sell',\n  templateUrl: './fund-buy-sell.component.html',\n  styleUrls: ['./fund-buy-sell.component.css']\n})\nexport class FundBuySellComponent implements OnInit, OnChanges {\n\n  @Input() currency: Currency;\n  @Output() onComplete: EventEmitter<Fund> = new EventEmitter();\n  @Input() portfolio: Portfolio;\n  @Input() isSell: Boolean;\n  @Input() sellFund: Fund;\n\n  private amount: number;\n  private quantity: number;\n  private error: String = '';\n  private requestInProgress: Boolean = false;\n  private buyConfirmation: Boolean = false;\n  private willHaveAmount: number;\n\n  constructor(private fundService: FundService,\n    private errorHandler: ErrorHandlerService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(): void {\n    this.buyConfirmation = false;\n    if (this.currency) {\n      if (this.isSell) {\n        this.quantity = this.sellFund.quantity;\n      } else {\n        this.quantity = 1;\n      }\n      this.amount = parseFloat(this.currency.value.toFixed(2));\n      this.checkFundSufficient();\n    }\n  }\n\n  amountChanged() {\n    this.checkFundSufficient();\n    this.quantity = parseFloat((this.amount / this.currency.value).toFixed(2));\n  }\n\n  quantityChanged() {\n    this.checkFundSufficient();\n    this.amount = parseFloat((this.currency.value * this.quantity).toFixed(2));\n  }\n\n  cancel() {\n    this.onComplete.emit(null);\n  }\n\n  checkFundSufficient() {\n\n    if (this.isSell) {\n      this.willHaveAmount = this.portfolio.amount + this.amount;\n    } else {\n      this.willHaveAmount = this.portfolio.amount - this.amount;\n    }\n\n    this.error = '';\n    if (!this.isSell && this.amount > this.portfolio.amount) {\n      this.error = 'Insufficient funds';\n      return false;\n    } else if (this.quantity <= 0) {\n      this.error = 'Quantity must be above 0';\n      return false;\n    } else if (this.amount < 0) {\n      this.error = 'Amount cannot be less than $0';\n      return false;\n    }\n\n    if (this.isSell) {\n      if (this.quantity > this.sellFund.quantity) {\n        this.error = 'You cannot sell more than what you have';\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  buyFund() {\n    if (this.requestInProgress) {\n      return;\n    }\n\n    this.error = '';\n    if (!this.checkFundSufficient()) {\n      return;\n    }\n\n    this.requestInProgress = true;\n    const fund = {\n      name: this.currency.id,\n      quantity: this.quantity\n    };\n\n    if (this.isSell) {\n      fund.quantity = - fund.quantity;\n    }\n\n    this.fundService.updateFund(this.portfolio, fund)\n      .subscribe((result) => {\n        this.onComplete.emit(result);\n        this.requestInProgress = false;\n      }, (err) => {\n        this.requestInProgress = false;\n        this.errorHandler.handleError('Error buying fund', err);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/fund/fund-buy-sell/fund-buy-sell.component.ts","module.exports = \".cc {\\r\\n    font-size: 25px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/fund/fund-list/fund-list.component.css\n// module id = ./src/app/components/fund/fund-list/fund-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"fund-list\\\"\\n     *ngIf=\\\"funds && currencyMap\\\">\\n    <div [hidden]=\\\"funds.length > 0\\\"\\n         class=\\\"text-muted font-italic text-center mt-5\\\">\\n        <i class=\\\"fab fa-bitcoin fa-7x\\\"></i> <br/><br/> You are not rich yet! <br/> Buy some crypto-currency! <br/>\\n    </div>\\n\\n    <div class=\\\"scroll-container\\\"\\n         appScreenHeight\\n         heightOffset=\\\"-135\\\">\\n        <div class=\\\"row no-gutters\\\">\\n            <div *ngFor=\\\"let thisFund of funds\\\"\\n                 class=\\\"col-4\\\">\\n\\n                <div class=\\\"card border shadow mx-2 mb-3\\\">\\n\\n                    <div class=\\\"card-header py-0 pr-2 mx-2 mt-1 bg-light border border-left-0 border-right-0 border-top-0\\\">\\n\\n                        <span class=\\\"mr-2\\\">{{currencyMap[thisFund.name].name}}</span>\\n                        <i [ngClass]=\\\"['cc', currencyMap[thisFund.name].symbol.toUpperCase()]\\\"></i>\\n                        <span class=\\\"badge badge-primary text-monospace py-1 ml-2 font-weight-bold float-right mt-2\\\">{{currencyMap[thisFund.name].symbol}}</span>\\n\\n                    </div>\\n                    <div class=\\\"card-body text-dark px-2 pt-0 pb-2\\\">\\n\\n                        <div class=\\\"row text-center align-items-center\\\">\\n                            <div class=\\\"col py-2 border border-top-0 border-bottom-0 border-left-0\\\">\\n                                <h4 title=\\\"Quantity\\\">\\n                                    <span> {{thisFund.quantity}}</span>\\n                                </h4>\\n                                <div class=\\\"text-muted small\\\"\\n                                     title=\\\"Value per quantity\\\">\\n                                    <i class=\\\"fas fa-dollar-sign\\\"></i> <span>{{currencyMap[thisFund.name].value.toFixed(2)}}</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col font-weight-bold\\\">\\n                                <div>\\n                                    <i class=\\\"fas fa-dollar-sign\\\"></i> {{(thisFund.quantity * currencyMap[thisFund.name].value).toFixed(2)}}\\n                                </div>\\n                                <div class=\\\"btn-group btn-group-sm mt-2\\\">\\n                                    <button class=\\\"btn btn-sm btn-outline-success\\\"\\n                                            title=\\\"Buy\\\"\\n                                            (click)=\\\"buyClick(thisFund)\\\">\\n                                        <span>BUY</span>\\n                            </button>\\n                                    <button class=\\\"btn btn-sm btn-outline-danger\\\"\\n                                            title=\\\"Sell\\\"\\n                                            (click)=\\\"sellClick(thisFund)\\\"> <span>SELL</span>\\n                            </button>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/fund/fund-list/fund-list.component.html\n// module id = ./src/app/components/fund/fund-list/fund-list.component.html\n// module chunks = main","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Fund, Currency } from '../../../model/model';\nimport { FundService } from '../../../services/fund.service';\nimport { CurrencyService } from '../../../services/currency.service';\n\n@Component({\n  selector: 'app-fund-list',\n  templateUrl: './fund-list.component.html',\n  styleUrls: ['./fund-list.component.css']\n})\nexport class FundListComponent implements OnInit {\n\n  @Input() funds: Fund[];\n  @Output() onBuyClick: EventEmitter<Fund> = new EventEmitter();\n  @Output() onSellClick: EventEmitter<{ fund: Fund, currency: Currency }> = new EventEmitter();\n  @Input() currencyMap: { string?: Currency };\n\n  constructor(private fundService: FundService,\n    private currencyService: CurrencyService) {\n  }\n\n  ngOnInit() {\n    // this.currencyService.getCurrency()\n    //   .subscribe((currency) => {\n    //     this.currencyMap = currency;\n    //   });\n  }\n\n  buyClick(fund) {\n    this.onBuyClick.emit(this.currencyMap[fund.name]);\n  }\n\n  sellClick(fund) {\n    this.onSellClick.emit({ currency: this.currencyMap[fund.name], fund: fund });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/fund/fund-list/fund-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.css\n// module id = ./src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"jumbotron h-100 mb-0\\\">\\n            <h1 class=\\\"display-3\\\">$Crypto-lator</h1>\\n            <p class=\\\"lead\\\">\\n                The Cryptocurrency trading simulator\\n            </p>\\n            <hr class=\\\"my-4\\\">\\n            <p>Start with $20,000 and trade cryptocurrency</p>\\n            <p>No real money! It's all virtual</p>\\n            <p class=\\\"lead\\\">\\n                <a class=\\\"btn btn-sm mt-3 btn-primary btn-lg\\\"\\n                   [routerLink]=\\\"['/login']\\\"\\n                   role=\\\"button\\\">Login to start trading</a>\\n            </p>\\n        </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <app-currency-list (onSelect)=\\\"redirectToLogin($event)\\\"></app-currency-list>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = ./src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n    const loggedInUser = this.authService.getLoggedInUser();\n    if (loggedInUser) {\n      this.router.navigate(['portfolio']);\n    }\n  }\n\n  redirectToLogin(currency) {\n    localStorage.setItem('openBuyModal', currency.id);\n    this.router.navigate(['login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/home/home.component.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { Currency } from '../../model/model';\n\n@Pipe({\n  name: 'filterCurrency'\n})\nexport class FilterCurrencyPipe implements PipeTransform {\n\n  transform(items: Currency[], filterText?: string): any {\n    if (!items) {\n      return [];\n    }\n    if (!filterText) {\n      return items;\n    }\n\n    filterText = filterText.toLowerCase();\n\n    return items.filter((i) => {\n      return i.name.toLowerCase().indexOf(filterText) > -1 || i.symbol.toLowerCase().indexOf(filterText) > -1;\n    });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/pipes/filter-currency.pipe.ts","module.exports = \".portfolio-status {\\r\\n    -webkit-box-shadow: -1px 3px 8px -5px;\\r\\n            box-shadow: -1px 3px 8px -5px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/portfolio/portfolio.component.css\n// module id = ./src/app/components/portfolio/portfolio.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\"\\n         *ngIf=\\\"portfolio && currencyMap\\\">\\n        <div class=\\\"row portfolio-status\\\">\\n            <div class=\\\"col\\\">\\n                <dt class=\\\"text-primary\\\">CASH</dt>\\n                <dd>\\n                    <i class=\\\"fas fa-dollar-sign fa-lg\\\"></i>\\n                    <span>{{(portfolio.amount).toFixed(2)}}</span>\\n                </dd>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <dt class=\\\"text-primary\\\">ASSETS</dt>\\n                <dd>\\n                    <i class=\\\"fab fa-bitcoin fa-lg\\\"></i>\\n                    <span>{{(assets).toFixed(2)}}</span>\\n                </dd>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <dt class=\\\"text-primary\\\">TOTAL</dt>\\n                <dd>\\n                    <i class=\\\"fas fa-dollar-sign fa-lg\\\"></i>\\n                    <span>{{(portfolio.amount + assets).toFixed(2)}}</span>\\n                </dd>\\n            </div>\\n        </div>\\n\\n        <!-- Fund list -->\\n        <div class=\\\"mt-3 row\\\">\\n            <app-fund-list class=\\\"w-100\\\"\\n                           [funds]=\\\"funds\\\"\\n                           [currencyMap]=\\\"currencyMap\\\"\\n                           (onBuyClick)=\\\"showBuyModal($event)\\\"\\n                           (onSellClick)=\\\"showSellModal($event)\\\"></app-fund-list>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <app-currency-list (onSelect)=\\\"showBuyModal($event)\\\"></app-currency-list>\\n    </div>\\n</div>\\n\\n<!-- Buy Sell funds modal -->\\n<div class=\\\"modal fade\\\"\\n     id=\\\"buySellFundModal\\\">\\n    <div class=\\\"modal-dialog\\\"\\n         role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">\\n                    <span [hidden]=\\\"!isSell\\\">\\n                      <i class=\\\"fas fa-hand-holding-usd\\\"></i> Sell Fund\\n                  </span>\\n                    <span [hidden]=\\\"isSell\\\">\\n                      <i class=\\\"fas fa-shopping-cart\\\"></i> Buy Fund\\n                  </span>\\n                </h5>\\n                <button type=\\\"button\\\"\\n                        class=\\\"close\\\"\\n                        data-dismiss=\\\"modal\\\"\\n                        aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" class=\\\"small\\\">&times;</span>\\n          </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <app-fund-buy-sell [currency]=\\\"selectedCurrency\\\"\\n                                   [portfolio]=\\\"portfolio\\\"\\n                                   [isSell]=\\\"isSell\\\"\\n                                   [sellFund]=\\\"sellFund\\\"\\n                                   (onComplete)=\\\"closeBuyModal($event)\\\"></app-fund-buy-sell>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/portfolio/portfolio.component.html\n// module id = ./src/app/components/portfolio/portfolio.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PortfolioService } from '../../services/portfolio.service';\nimport { Portfolio, Currency, Fund } from '../../model/model';\nimport { AuthService } from '../../services/auth.service';\nimport { FundService } from '../../services/fund.service';\nimport { CurrencyService } from '../../services/currency.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { InteractionService } from '../../services/interaction.service';\n\ndeclare const $;\n\n@Component({\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.css']\n})\nexport class PortfolioComponent implements OnInit {\n\n  private portfolio: Portfolio;\n  private selectedCurrency: Currency;\n  private funds: Fund[];\n  private assets: number;\n  private isSell: Boolean;\n  private sellFund: Fund;\n  private openOnLoad: string;\n  private currencyMap: { string?: Currency };\n\n  constructor(\n    private portfolioService: PortfolioService,\n    private fundService: FundService,\n    private currencyService: CurrencyService,\n    private authService: AuthService,\n    private interactionService: InteractionService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.assets = 0;\n    this.openOnLoad = localStorage.getItem('openBuyModal');\n    localStorage.removeItem('openBuyModal');\n    this.loadPortfolio();\n  }\n\n  loadPortfolio() {\n    this.interactionService.showLoader(true);\n    this.portfolioService.getPortfolio()\n      .subscribe((portfolio) => {\n        this.portfolio = portfolio;\n        // get funds\n        this.fundService.getFunds(this.portfolio)\n          .subscribe((funds) => {\n            this.funds = funds;\n            this.assets = 0.00;\n\n            // get currency\n            this.currencyService.getCurrency()\n              .subscribe((currency) => {\n                this.currencyMap = currency;\n                this.funds.forEach((i) => {\n                  this.assets += i.quantity * currency[i.name].value;\n                });\n\n                this.interactionService.showLoader(false);\n\n                if (this.openOnLoad && currency[this.openOnLoad]) {\n                  this.showBuyModal(currency[this.openOnLoad]);\n                }\n\n              }, (err) => {\n                console.log('Error getting currency info', err);\n              });\n\n\n          });\n      });\n  }\n\n  showBuyModal(currency) {\n    this.selectedCurrency = currency;\n    this.isSell = false;\n    this.sellFund = null;\n    $('#buySellFundModal').modal('show');\n  }\n\n  showSellModal(sell) {\n    this.selectedCurrency = sell.currency;\n    this.isSell = true;\n    this.sellFund = sell.fund;\n    $('#buySellFundModal').modal('show');\n  }\n\n  closeBuyModal(result) {\n    $('#buySellFundModal').modal('hide');\n    if (result) {\n      this.loadPortfolio();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/portfolio/portfolio.component.ts","module.exports = \".hvj-app-alert {\\r\\n    position: fixed;\\r\\n    z-index: 3000;\\r\\n    left: 20%;\\r\\n    right: 20%;\\r\\n}\\r\\n\\r\\n.hvj-app-alert .alert {\\r\\n    -webkit-box-shadow: 0 0 24px -7px black;\\r\\n            box-shadow: 0 0 24px -7px black;\\r\\n}\\r\\n\\r\\n.hvj-app-alert .alert .close {\\r\\n    margin-top: -3px;\\r\\n}\\r\\n\\r\\n.hvj-app-alert .alert-text span {\\r\\n    font-size: 80%;\\r\\n    font-weight: bold;\\r\\n    font-style: italic;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/shared/alert/alert.component.css\n// module id = ./src/app/components/shared/alert/alert.component.css\n// module chunks = main","module.exports = \"<div class=\\\"hvj-app-alert\\\">\\n\\n    <div class=\\\"alert fade show pr-3\\\"\\n         [hidden]=\\\"!alertVisible\\\"\\n         [ngClass]=\\\"'alert-' + (alertType ? alertType : 'danger')\\\"\\n         role=\\\"alert\\\">\\n        <button type=\\\"button\\\"\\n                class=\\\"close\\\"\\n                (click)=\\\"alertVisible = false\\\">\\n      \\n        <i class=\\\"fas fa-times small\\\"></i>\\n      \\n    </button>\\n\\n        <div class=\\\"d-inline-block align-middle mr-3\\\">\\n            <span *ngIf=\\\"alertType == 'danger'\\\">\\n                    <i class=\\\"fas fa-times-circle fa-2x\\\"></i>                 \\n            </span>\\n            <span *ngIf=\\\"alertType == 'warning'\\\">\\n                <i class=\\\"fas fa-exclamation-circle fa-2x\\\"></i>\\n            </span>\\n            <span *ngIf=\\\"alertType == 'success'\\\">\\n            <i class=\\\"fas fa-check-circle fa-2x\\\"></i>\\n            </span>\\n        </div>\\n        <div [innerHtml]=\\\"alertText\\\"\\n             class=\\\"alert-text d-inline-block align-middle\\\"></div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/shared/alert/alert.component.html\n// module id = ./src/app/components/shared/alert/alert.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { InteractionService } from '../../../services/interaction.service';\nimport { AppConstants } from '../../../app.constants';\nimport { AlertData } from '../../../model/ui-model';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AlertComponent implements OnInit {\n\n  // properties\n  private alertType: string;\n  private alertText: string | SafeHtml;\n  private alertVisible: boolean;\n\n  constructor(private sce: DomSanitizer,\n    private interactionService: InteractionService) { }\n\n  ngOnInit() {\n    this.alertVisible = false;\n    this.interactionService.registerCallback(AppConstants.EVENTS.showAlert, (d) => { this.showAlert(d); });\n    this.interactionService.registerCallback(AppConstants.EVENTS.hideAlert, () => { this.hideAlert(); });\n  }\n\n  /**\n   * show alert on page\n   * @param data alert data\n   */\n  showAlert(data: AlertData) {\n    if (data.text) {\n      this.alertText = this.sce.bypassSecurityTrustHtml(data.text);\n      this.alertType = data.type || 'danger';\n      this.alertVisible = true;\n\n      if (data.autoClose) {\n        setTimeout(() => {\n          this.alertVisible = false;\n        }, 3000);\n      }\n    }\n  }\n\n  /** Hide alert */\n  hideAlert() {\n    this.alertVisible = false;\n    this.alertType = '';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/shared/alert/alert.component.ts","module.exports = \".hvj-loader {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    top: 50%;\\r\\n}\\r\\n\\r\\n.hvj-loader .loader-mask {\\r\\n    background: #000;\\r\\n    opacity: 0.6;\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.hvj-loader .loader-img {\\r\\n    position: relative;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/shared/loader/loader.component.css\n// module id = ./src/app/components/shared/loader/loader.component.css\n// module chunks = main","module.exports = \"<div class=\\\"hvj-loader text-center\\\"\\n     *ngIf=\\\"showLoader\\\">\\n    <div class=\\\"loader-mask\\\"></div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/shared/loader/loader.component.html\n// module id = ./src/app/components/shared/loader/loader.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { InteractionService } from '../../../services/interaction.service';\nimport { AppConstants } from '../../../app.constants';\n\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  // properties\n  private showLoader = false;\n\n  constructor(private interactionService: InteractionService) { }\n\n  ngOnInit() {\n    this.interactionService.registerCallback(AppConstants.EVENTS.showLoader, (d) => { this.toggleLoader(d); });\n  }\n\n  /**\n   * Show / hide loader\n   * @param val true to show, false to hide\n   */\n  toggleLoader(val: boolean) {\n    this.showLoader = val;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/shared/loader/loader.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/shared/nav/nav.component.css\n// module id = ./src/app/components/shared/nav/nav.component.css\n// module chunks = main","module.exports = \"<!-- Nav bar -->\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light py-0 sticky-top border border-top-0 border-left-0 border-right-0 border-primary\\\">\\n    <a class=\\\"navbar-brand font-weight-light\\\"\\n       href=\\\"#\\\">$Crypto-lator</a>\\n    <button class=\\\"navbar-toggler\\\"\\n            type=\\\"button\\\"\\n            data-target=\\\"#navbarContent\\\"\\n            data-toggle=\\\"collapse\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n    <div class=\\\"collapse navbar-collapse\\\"\\n         id=\\\"navbarContent\\\">\\n        <ul class=\\\"navbar-nav ml-3 mr-auto\\\">\\n            <li class=\\\"nav-item mx-3\\\">\\n                <a class=\\\"nav-link\\\"\\n                   [routerLink]=\\\"['/portfolio']\\\">Portfolio <span class=\\\"sr-only\\\"></span></a>\\n            </li>\\n            <li class=\\\"nav-item mx-3\\\">\\n                <a class=\\\"nav-link\\\"\\n                   [routerLink]=\\\"['/profile']\\\">Profile</a>\\n            </li>\\n            <li class=\\\"nav-item mx-3\\\">\\n                <a class=\\\"nav-link\\\"\\n                   [routerLink]=\\\"['/discussion']\\\">Discussions</a>\\n            </li>\\n            <li class=\\\"nav-item mx-3\\\"\\n                *ngIf=\\\"loggedIn && loggedIn.userType === 'admin'\\\">\\n                <a class=\\\"nav-link btn-outline-warning\\\"\\n                   [routerLink]=\\\"['/admin']\\\"> <i class=\\\"fas fa-bolt fa-lg mr-1\\\"></i> Admin</a>\\n            </li>\\n            <li class=\\\"nav-item mx-3\\\"\\n                [hidden]=\\\"!showLoader\\\">\\n                <svg class=\\\"mt-1\\\"\\n                     xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n                     xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n                     xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                     version=\\\"1.0\\\"\\n                     width=\\\"37px\\\"\\n                     height=\\\"37px\\\"\\n                     viewBox=\\\"0 0 128 128\\\"\\n                     xml:space=\\\"preserve\\\"><g><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"16\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"14.344\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(45 64 64)\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"12.531\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(90 64 64)\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"10.75\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(135 64 64)\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"10.063\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(180 64 64)\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"8.063\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(225 64 64)\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"6.438\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(270 64 64)\\\"/><circle cx=\\\"16\\\" cy=\\\"64\\\" r=\\\"5.375\\\" fill=\\\"#2196f3\\\" fill-opacity=\\\"1\\\" transform=\\\"rotate(315 64 64)\\\"/><animateTransform attributeName=\\\"transform\\\" type=\\\"rotate\\\" values=\\\"0 64 64;315 64 64;270 64 64;225 64 64;180 64 64;135 64 64;90 64 64;45 64 64\\\" calcMode=\\\"discrete\\\" dur=\\\"640ms\\\" repeatCount=\\\"indefinite\\\"></animateTransform></g></svg>\\n            </li>\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav form-inline ml-auto\\\"\\n            *ngIf=\\\"!loggedIn\\\">\\n            <li class=\\\"nav-item mx-2\\\">\\n                <a class=\\\"btn btn-sm btn-primary\\\"\\n                   [routerLink]=\\\"['/login']\\\">Login</a>\\n            </li>\\n\\n            <li class=\\\"nav-item mx-2\\\">\\n                <a class=\\\"btn btn-sm btn-primary\\\"\\n                   [routerLink]=\\\"['/register']\\\">Register</a>\\n            </li>\\n\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav form-inline ml-auto\\\"\\n            *ngIf=\\\"loggedIn\\\">\\n\\n            <li class=\\\"nav-item mr-1\\\">\\n                <i *ngIf=\\\"loggedIn.userType==='user'\\\"\\n                   class=\\\"fas fa-user-circle fa-3x py-1 text-muted\\\"></i>\\n                <i *ngIf=\\\"loggedIn.userType==='expert'\\\"\\n                   class=\\\"fas fa-street-view fa-3x py-1 text-success\\\"></i>\\n                <i *ngIf=\\\"loggedIn.userType==='admin'\\\"\\n                   class=\\\"fas fa-bolt fa-3x py-1 text-warning\\\"></i>\\n            </li>\\n            <li class=\\\"nav-item mr-3\\\">\\n                <div>\\n                    {{loggedIn.name}}\\n                </div>\\n                <div class=\\\"text-primary font-italic small\\\">\\n                    @{{loggedIn.username}}\\n                </div>\\n            </li>\\n\\n            <li class=\\\"nav-item mx-2\\\">\\n                <span class=\\\"btn btn-sm btn-primary\\\"\\n                      (click)=\\\"logout()\\\">Logout</span>\\n            </li>\\n        </ul>\\n\\n    </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/shared/nav/nav.component.html\n// module id = ./src/app/components/shared/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { InteractionService } from '../../../services/interaction.service';\nimport { AppConstants } from '../../../app.constants';\nimport { User } from '../../../model/model';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  private loggedIn: User;\n  private showLoader: Boolean;\n\n  constructor(private interactionService: InteractionService,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.showLoader = false;\n    this.interactionService.registerCallback(AppConstants.EVENTS.showLoader, (d) => { this.toggleLoader(d); });\n    // register for login change\n    this.interactionService.registerCallback(AppConstants.EVENTS.loginChange, (user) => {\n      if (user) {\n        this.loggedIn = user;\n      } else {\n        this.loggedIn = null;\n      }\n    });\n\n    this.authService.checkLoggedIn(true)\n      .subscribe((loggedIn) => {\n        if (loggedIn) {\n          this.loggedIn = this.authService.getLoggedInUser();\n        }\n      }, (err) => {\n        console.error('Error checking user login status', err);\n        this.loggedIn = null;\n      });\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n  toggleLoader(val: boolean) {\n    this.showLoader = val;\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/shared/nav/nav.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.css\n// module id = ./src/app/components/user/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"user-registration col-8 m-auto mt-3\\\">\\n        <h1>Login</h1>\\n        <hr>\\n        <br>\\n        <!--form-->\\n        <form class=\\\"form\\\"\\n              (ngSubmit)=\\\"login()\\\"\\n              #loginForm=\\\"ngForm\\\">\\n            <!-- User Name -->\\n            <div class=\\\"form-group\\\">\\n                <input placeholder=\\\"User Name\\\"\\n                       type=\\\"text\\\"\\n                       class=\\\"form-control form-control-sm\\\"\\n                       name=\\\"usernameField\\\"\\n                       [(ngModel)]=\\\"username\\\"\\n                       #usernameField=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'border-danger': !usernameField.valid && usernameField.touched}\\\"\\n                       required />\\n                <span *ngIf=\\\"usernameField.invalid && usernameField.touched\\\"\\n                      class=\\\"text-danger ml-2\\\">Username is required</span>\\n            </div>\\n\\n            <!-- Password -->\\n            <div class=\\\"form-group\\\">\\n                <input placeholder=\\\"Password\\\"\\n                       type=\\\"password\\\"\\n                       class=\\\"form-control form-control-sm\\\"\\n                       name=\\\"passwordField\\\"\\n                       [(ngModel)]=\\\"password\\\"\\n                       #passwordField=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'border-danger': (!passwordField.valid && passwordField.touched)}\\\"\\n                       required />\\n                <span *ngIf=\\\"passwordField.invalid && passwordField.touched\\\"\\n                      class=\\\"text-danger ml-2\\\">Password is required</span>\\n            </div>\\n\\n            <!-- form actions -->\\n            <div>\\n                <button type=\\\"submit\\\"\\n                        class=\\\"btn btn-sm btn-primary mr-2\\\"\\n                        [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n                <a [routerLink]=\\\"['/register']\\\"\\n                   class=\\\"btn btn-sm btn-secondary\\\">Register</a>\\n\\n            </div>\\n            <!-- /form actions -->\\n        </form>\\n        <!--/form-->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.html\n// module id = ./src/app/components/user/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { User } from '../../../model/model';\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { InteractionService } from '../../../services/interaction.service';\nimport { ErrorHandlerService } from '../../../services/error-handler.service';\nimport { ParamMap } from '@angular/router/src/shared';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // properties\n  username: string;\n  password: string;\n  redirectTo: string;\n\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    private interactionService: InteractionService,\n    private errorHanderService: ErrorHandlerService) {\n    this.activatedRoute.queryParamMap.subscribe((params: ParamMap) => {\n      this.redirectTo = params.get('next');\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /** Login User */\n  login() {\n    this.interactionService.hideAlert();\n    this.interactionService.showLoader(true);\n    this.authService.login(this.username, this.password)\n      .subscribe((usr) => {\n        this.interactionService.showLoader(false);\n        if (this.redirectTo) {\n          this.router.navigateByUrl(this.redirectTo);\n        } else {\n          this.router.navigate(['/portfolio']);\n        }\n      }, (err) => {\n        if (err.status === 401) {\n          this.interactionService.showLoader(false);\n          this.interactionService.showAlert('Login failed. Please check username and password and try again');\n        } else {\n          this.errorHanderService.handleError('Login Failed', err);\n        }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.css\n// module id = ./src/app/components/user/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"pt-4 w-75 m-auto\\\"\\n         *ngIf=\\\"currentUser\\\">\\n        <div>\\n            <div class=\\\"float-left mr-3\\\">\\n                <i *ngIf=\\\"currentUser.userType === 'user'\\\"\\n                   class=\\\"text-muted fa fa-user-circle fa-4x\\\"></i>\\n                <i *ngIf=\\\"currentUser.userType === 'expert'\\\"\\n                   class=\\\"text-success fa fa-street-view fa-4x\\\"></i>\\n                <i *ngIf=\\\"currentUser.userType === 'admin'\\\"\\n                   class=\\\"text-warning fa fa-bolt fa-4x\\\"></i>\\n            </div>\\n            <div class=\\\"ml-5\\\">\\n                <h3 class=\\\"text-primary\\\">\\n                    @{{currentUser.username}}\\n                </h3>\\n                <div *ngIf=\\\"currentUser.userType === 'expert'\\\"\\n                     class=\\\"text-success small ml-4\\\"> [ EXPERT ]\\n                </div>\\n                <div *ngIf=\\\"currentUser.userType === 'admin'\\\"\\n                     class=\\\"text-warning small ml-4\\\"> [ ADMIN ]\\n                </div>\\n            </div>\\n\\n        </div>\\n        <hr>\\n        <!--form-->\\n        <form class=\\\"form\\\"\\n              (ngSubmit)=\\\"updateUser()\\\"\\n              #profileForm=\\\"ngForm\\\">\\n\\n            <!-- Name -->\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label text-dark\\\"\\n                       for=\\\"name\\\">NAME</label>\\n                <input placeholder=\\\"Name\\\"\\n                       type=\\\"text\\\"\\n                       class=\\\"form-control form-control-sm py-1\\\"\\n                       name=\\\"nameField\\\"\\n                       [(ngModel)]=\\\"name\\\"\\n                       #nameField=\\\"ngModel\\\" />\\n            </div>\\n\\n            <div class=\\\"row pt-2\\\">\\n                <!-- Password -->\\n                <div class=\\\"form-group col-sm-6 col-12\\\">\\n                    <label class=\\\"control-label text-dark\\\"\\n                           for=\\\"password\\\">PASSWORD</label>\\n                    <input placeholder=\\\"*****\\\"\\n                           type=\\\"password\\\"\\n                           class=\\\"form-control form-control-sm py-1\\\"\\n                           name=\\\"passwordField\\\"\\n                           [(ngModel)]=\\\"password\\\"\\n                           #passwordField=\\\"ngModel\\\" />\\n                </div>\\n\\n                <!-- Verify Password -->\\n                <div class=\\\"form-group col-sm-6 col-12\\\">\\n                    <label class=\\\"control-label text-dark\\\"\\n                           for=\\\"name\\\">CONFIRM PASSWORD</label>\\n                    <input placeholder=\\\"******\\\"\\n                           type=\\\"password\\\"\\n                           class=\\\"form-control form-control-sm py-1\\\"\\n                           name=\\\"confirmPasswordField\\\"\\n                           [(ngModel)]=\\\"confirmPassword\\\"\\n                           #confirmPasswordField=\\\"ngModel\\\" />\\n                    <span *ngIf=\\\"confirmPassword && confirmPassword !== password && confirmPasswordField.touched\\\"\\n                          class=\\\"text-danger ml-2 small\\\">Passwords do not match</span>\\n                </div>\\n\\n            </div>\\n\\n            <!-- Email -->\\n            <div class=\\\"form-group pt-2\\\">\\n                <label class=\\\"control-label text-dark\\\"\\n                       for=\\\"name\\\">EMAIL</label>\\n                <input placeholder=\\\"Email\\\"\\n                       type=\\\"text\\\"\\n                       class=\\\"form-control form-control-sm py-1\\\"\\n                       name=\\\"emailField\\\"\\n                       [(ngModel)]=\\\"email\\\"\\n                       #emailField=\\\"ngModel\\\" />\\n            </div>\\n\\n            <!-- form actions -->\\n            <div>\\n                <button type=\\\"submit\\\"\\n                        class=\\\"btn btn-sm btn-primary py-1\\\"\\n                        [disabled]=\\\"profileForm.invalid || profileForm.untouched || confirmPassword !== password\\\">Save</button>\\n            </div>\\n            <!-- /form actions -->\\n        </form>\\n        <!--/form-->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.html\n// module id = ./src/app/components/user/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../../model/model';\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { InteractionService } from '../../../services/interaction.service';\nimport { AppConstants } from '../../../app.constants';\nimport { ErrorHandlerService } from '../../../services/error-handler.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  private currentUser: User;\n  private name: string;\n  private password: string;\n  private confirmPassword: string;\n  private email: string;\n\n  constructor(private userService: UserService,\n    private authService: AuthService,\n    private errorHandler: ErrorHandlerService,\n    private interactionService: InteractionService) { }\n\n  ngOnInit() {\n    this.currentUser = this.authService.getLoggedInUser();\n    this.name = this.currentUser.name;\n    this.password = '';\n    this.confirmPassword = '';\n    this.email = this.currentUser.email;\n  }\n\n  updateUser() {\n    if (this.password) {\n      this.currentUser.password = this.password;\n    } else {\n      this.currentUser.password = null;\n    }\n\n    this.currentUser.name = this.name;\n    this.currentUser.email = this.email;\n    this.interactionService.showLoader(true);\n    this.userService.updateUser(this.currentUser._id, this.currentUser)\n      .subscribe((updatedUser) => {\n        this.interactionService.showLoader(false);\n        this.authService.setLoggedInUser(updatedUser);\n        this.interactionService.invoke(AppConstants.EVENTS.loginChange, updatedUser);\n        this.interactionService.showAlert('Changes saved successfully', 'success', true);\n      }, (err) => {\n        this.errorHandler.handleError('Error saving changes', err);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/profile/profile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.css\n// module id = ./src/app/components/user/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"user-registration mt-3\\\">\\n        <h3>Register</h3>\\n        <hr>\\n        <br>\\n        <!--form-->\\n        <form class=\\\"form\\\"\\n              (ngSubmit)=\\\"register()\\\"\\n              #registerForm=\\\"ngForm\\\">\\n            <!-- User Name -->\\n            <div class=\\\"form-group\\\">\\n                <input placeholder=\\\"User Name\\\"\\n                       type=\\\"text\\\"\\n                       class=\\\"form-control form-control-sm\\\"\\n                       name=\\\"usernameField\\\"\\n                       [(ngModel)]=\\\"username\\\"\\n                       #usernameField=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'border-danger': registrationErrors.username || (!usernameField.valid && usernameField.touched)}\\\"\\n                       required />\\n                <span *ngIf=\\\"usernameField.invalid && usernameField.touched\\\"\\n                      class=\\\"text-danger ml-2\\\">Username is required</span>\\n                <span *ngIf=\\\"registrationErrors.username\\\"\\n                      class=\\\"text-danger ml-2\\\">{{registrationErrors.username}}</span>\\n            </div>\\n\\n            <!-- Password -->\\n            <div class=\\\"form-group\\\">\\n                <input placeholder=\\\"Password\\\"\\n                       type=\\\"password\\\"\\n                       class=\\\"form-control form-control-sm\\\"\\n                       name=\\\"passwordField\\\"\\n                       [(ngModel)]=\\\"password\\\"\\n                       #passwordField=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'border-danger': (!passwordField.valid && passwordField.touched)}\\\"\\n                       required />\\n                <span *ngIf=\\\"passwordField.invalid && passwordField.touched\\\"\\n                      class=\\\"text-danger ml-2\\\">Password is required</span>\\n            </div>\\n\\n            <!-- Verify Password -->\\n            <div class=\\\"form-group\\\">\\n                <input placeholder=\\\"Verify Password\\\"\\n                       type=\\\"password\\\"\\n                       class=\\\"form-control form-control-sm\\\"\\n                       name=\\\"verifyPasswordField\\\"\\n                       [(ngModel)]=\\\"verifyPassword\\\"\\n                       #verifyPasswordField=\\\"ngModel\\\"\\n                       [ngClass]=\\\"{'border-danger': verifyPassword !== password && verifyPasswordField.touched}\\\"\\n                       required />\\n                <span *ngIf=\\\"verifyPasswordField.invalid && verifyPasswordField.touched\\\"\\n                      class=\\\"text-danger ml-2\\\">Verify Password is required</span>\\n                <span *ngIf=\\\"verifyPassword && verifyPassword !== password && verifyPasswordField.touched\\\"\\n                      class=\\\"text-danger ml-2\\\">Passwords do not match</span>\\n            </div>\\n\\n            <!-- form actions -->\\n            <div>\\n                <button type=\\\"submit\\\"\\n                        class=\\\"btn btn-sm btn-primary\\\"\\n                        [disabled]=\\\"registerForm.invalid || verifyPassword !== password\\\">Register</button>\\n            </div>\\n            <!-- /form actions -->\\n        </form>\\n        <!--/form-->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.html\n// module id = ./src/app/components/user/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { InteractionService } from '../../../services/interaction.service';\nimport { ErrorHandlerService } from '../../../services/error-handler.service';\nimport { User } from '../../../model/model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n\n  // properties\n  username: string;\n  password: string;\n  verifyPassword: string;\n  registrationErrors: any = {};\n\n  constructor(private userService: UserService,\n    private router: Router,\n    private authService: AuthService,\n    private interactionsService: InteractionService,\n    private errorHanderService: ErrorHandlerService) { }\n\n  ngOnInit() {\n  }\n\n  register() {\n    const newUser = new User();\n    newUser.username = this.username;\n    newUser.password = this.password;\n\n    // create new user\n    this.interactionsService.showLoader(true);\n    this.userService.register(this.username, this.password)\n      .subscribe(\n        (registeredUser) => {\n          if (registeredUser) {\n            this.authService.setLoggedInUser(registeredUser);\n            this.interactionsService.showLoader(false);\n            console.log(registeredUser);\n            this.router.navigate(['/portfolio']);\n          } else {\n            this.interactionsService.showAlert('Registration unsuccessful! <br/> Server returned empty user object');\n          }\n        },\n        (err) => {\n          this.errorHanderService.handleError('Error registering user', err);\n          this.interactionsService.showLoader(false);\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/register/register.component.ts","import { Directive, ElementRef, Input, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appScreenHeight]'\n})\nexport class ScreenHeightDirective implements OnInit {\n\n  @Input() heightOffset: number;\n\n  constructor(private el: ElementRef) {\n\n  }\n\n  ngOnInit() {\n    if (this.heightOffset === undefined) {\n      this.heightOffset = 0;\n    }\n    this.el.nativeElement.style.height = (window.innerHeight - 105 + this.heightOffset) + 'px';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/directives/screen-height.directive.ts","/** Models a User object */\r\nexport class User {\r\n    _id: string;\r\n    username?: string;\r\n    password?: string;\r\n    name?: string;\r\n    email?: string;\r\n    userType?: string;\r\n}\r\n\r\nexport class Portfolio {\r\n    _id: string;\r\n    amount: number;\r\n}\r\n\r\nexport class Fund {\r\n    _id?: string;\r\n    name?: string;\r\n    quantity?: number;\r\n}\r\n\r\nexport class Currency {\r\n    id: string;\r\n    name: string;\r\n    rank: number;\r\n    symbol: string;\r\n    value: number;\r\n}\r\n\r\nexport class Discussion {\r\n    _id?: string;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nexport class Comment {\r\n    _id?: string;\r\n    discussion?: string;\r\n    text: string;\r\n    isExpertAnswer?: Boolean;\r\n    createdBy?: string;\r\n    dateCreated?: Date;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/model/model.ts","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { User } from '../model/model';\r\nimport { UserService } from './user.service';\r\nimport { ErrorHandlerService } from './error-handler.service';\r\nimport { CanActivate } from '@angular/router';\r\nimport { InteractionService } from './interaction.service';\r\nimport { AppConstants } from '../app.constants';\r\nimport { RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router/src/router_state';\r\n\r\n@Injectable()\r\nexport class AuthService implements CanActivate {\r\n    // properties\r\n    loggedInUser: User;\r\n\r\n    api = {\r\n        'getLoggedInUser': this.getLoggedInUser,\r\n        'setLoggedInUser': this.setLoggedInUser,\r\n        'login': this.login,\r\n        'logout': this.logout\r\n    };\r\n\r\n    constructor(private router: Router,\r\n        private activatedRouter: ActivatedRoute,\r\n        private userService: UserService,\r\n        private interactionService: InteractionService,\r\n        private errorHandlerService: ErrorHandlerService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.checkLoggedIn(false, state.url);\r\n    }\r\n\r\n\r\n    /**\r\n     * Check if user is logged in\r\n     * @returns logged in user object; null, if user is not logged in\r\n     */\r\n    getLoggedInUser(): User {\r\n        this.loggedInUser = this.loggedInUser || JSON.parse(localStorage.getItem('loggedInUser'));\r\n        if (this.loggedInUser) {\r\n            return Object.assign({}, this.loggedInUser);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    /** Set user as logged in user */\r\n    setLoggedInUser(user: User): void {\r\n        this.loggedInUser = user;\r\n        localStorage.setItem('loggedInUser', JSON.stringify(this.loggedInUser));\r\n        this.interactionService.invoke(AppConstants.EVENTS.loginChange, Object.assign({}, this.loggedInUser));\r\n    }\r\n\r\n    /** Remove logged in user */\r\n    removeLoggedInUser(): void {\r\n        this.loggedInUser = null;\r\n        localStorage.removeItem('loggedInUser');\r\n        this.interactionService.invoke(AppConstants.EVENTS.loginChange, null);\r\n    }\r\n\r\n    /**\r\n     * Login user\r\n     * @param username username\r\n     * @param password password\r\n     * @returns logged in user; null if login fails\r\n     */\r\n    login(username: string, password: string): Observable<User> {\r\n        const obs = new Observable<User>((observer) => {\r\n            this.userService.login(username, password)\r\n                .subscribe((loggedInUser) => {\r\n                    this.interactionService.invoke(AppConstants.EVENTS.loginChange);\r\n                    this.setLoggedInUser(loggedInUser);\r\n                    observer.next(Object.assign({}, loggedInUser));\r\n                    observer.complete();\r\n                }, (err) => {\r\n                    this.removeLoggedInUser();\r\n                    observer.error(err);\r\n                });\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n    /**\r\n     * Check if user is logged in\r\n     * @param disableRedirect true, if redirect to login page must be disabled\r\n     * @param accessedRoute route that was tried to be accessed\r\n     * @returns subscription that resolves to true if the user is logged in, false otherwise\r\n     */\r\n    checkLoggedIn(disableRedirect?: boolean, accessedRoute?: string): Observable<boolean> {\r\n        const obs = new Observable<boolean>((observer) => {\r\n            this.userService.loggedIn()\r\n                .subscribe((res) => {\r\n                    if (res) {\r\n                        this.setLoggedInUser(res);\r\n                        observer.next(true);\r\n                        observer.complete();\r\n                    } else {\r\n                        this.removeLoggedInUser();\r\n                        if (!disableRedirect) {\r\n                            this.interactionService.showAlert('Login to continue', 'warning', true);\r\n                            this.router.navigate(['/login'], { queryParams: { next: accessedRoute } });\r\n                        }\r\n                        observer.next(false);\r\n                        observer.complete();\r\n                    }\r\n                }, (err) => {\r\n                    console.error('Error checking login status', err);\r\n                    this.removeLoggedInUser();\r\n                    observer.next(false);\r\n                    observer.complete();\r\n                });\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n\r\n    /**\r\n     * Logout user\r\n     */\r\n    logout() {\r\n        this.interactionService.showLoader(true);\r\n        this.removeLoggedInUser();\r\n        this.userService.logout()\r\n            .subscribe((res) => {\r\n                this.interactionService.showLoader(false);\r\n                this.interactionService.showAlert('You have been logged out successfully', 'success', true);\r\n                this.router.navigate(['/']);\r\n            }, (err) => {\r\n                console.log(err);\r\n                this.errorHandlerService.handleError('Oops! Strange! Can\\'t log you out!', err);\r\n                this.router.navigate(['/']);\r\n            });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Comment } from '../model/model';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class CommentService {\r\n\r\n    endpoint = {\r\n        'getComments': AppConstants.ENDPOINT.baseUrl + '/discussions/{discussionId}/comments',\r\n        'createComment': AppConstants.ENDPOINT.baseUrl + '/discussions/{discussionId}/comments',\r\n        'updateComment': AppConstants.ENDPOINT.baseUrl + '/discussions/{discussionId}/comments/{commentId}',\r\n        'deleteComment': AppConstants.ENDPOINT.baseUrl + '/discussions/{discussionId}/comments/{commentId}',\r\n    };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    getComments(discussionId: string) {\r\n        const url = this.endpoint.getComments.replace('{discussionId}', discussionId);\r\n\r\n        const obs = new Observable<Comment[]>((observer) => {\r\n            this.http.get<Comment[]>(url, { withCredentials: true })\r\n                .subscribe((comments) => {\r\n                    comments.forEach((c) => {\r\n                        if (c.dateCreated) {\r\n                            c.dateCreated = new Date(c.dateCreated);\r\n                        }\r\n                    });\r\n                    observer.next(comments);\r\n                    observer.complete();\r\n                }, (err) => {\r\n                    observer.error(err);\r\n                });\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n\r\n    createComment(comment: Comment, discussionId: string) {\r\n        const url = this.endpoint.createComment.replace('{discussionId}', discussionId);\r\n\r\n        const obs = new Observable<Comment>((observer) => {\r\n            this.http.post<Comment>(url, comment, { withCredentials: true })\r\n                .subscribe((createdComment) => {\r\n                    if (createdComment.dateCreated) {\r\n                        createdComment.dateCreated = new Date(createdComment.dateCreated);\r\n                    }\r\n                    observer.next(createdComment);\r\n                    observer.complete();\r\n                }, (err) => {\r\n                    observer.error(err);\r\n                });\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n\r\n    updateComment(comment: Comment, discussionId: string) {\r\n        const url = this.endpoint.createComment\r\n            .replace('{discussionId}', discussionId)\r\n            .replace('{commentId}', comment._id);\r\n\r\n        const obs = new Observable<Comment>((observer) => {\r\n            this.http.put<Comment>(url, comment, { withCredentials: true })\r\n                .subscribe((updatedComment) => {\r\n                    if (updatedComment.dateCreated) {\r\n                        updatedComment.dateCreated = new Date(updatedComment.dateCreated);\r\n                    }\r\n                    observer.next(updatedComment);\r\n                    observer.complete();\r\n                }, (err) => {\r\n                    observer.error(err);\r\n                });\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n\r\n    deleteComment(comment: Comment, discussionId: string) {\r\n        const url = this.endpoint.deleteComment\r\n            .replace('{discussionId}', discussionId)\r\n            .replace('{commentId}', comment._id);\r\n        return this.http.delete<Comment>(url, { withCredentials: true });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/comment.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { User, Currency } from '../model/model';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class CurrencyService {\r\n\r\n    endpoint = {\r\n        'getCurrency': 'https://api.coinmarketcap.com/v1/ticker/'\r\n    };\r\n\r\n    // local cache\r\n    currency: { string?: Currency } = {};\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getCurrency() {\r\n        const obs = new Observable<{ string?: Currency }>((observer) => {\r\n\r\n            // check if data is availabe in local storage\r\n            let cached: any = localStorage.getItem('cachedCurrency');\r\n            if (cached) {\r\n                cached = JSON.parse(cached);\r\n                cached.setAt = new Date(cached.setAt);\r\n                const now: any = new Date();\r\n                if (now - cached.setAt > 1000 * 60 * 5) {\r\n                    localStorage.removeItem('cachedCurrency');\r\n                } else {\r\n                    console.log('currency data loaded from cache');\r\n                    this.currency = cached.currency;\r\n                }\r\n            }\r\n\r\n            if (Object.values(this.currency).length > 0) {\r\n                observer.next(this.currency);\r\n                observer.complete();\r\n            } else {\r\n                this.http.get(this.endpoint.getCurrency)\r\n                    .subscribe((result: any) => {\r\n                        result.forEach((i) => {\r\n                            this.currency[i.id] = {\r\n                                id: i.id,\r\n                                name: i.name,\r\n                                symbol: i.symbol,\r\n                                value: parseFloat(i.price_usd),\r\n                                rank: parseInt(i.rank, 10)\r\n                            };\r\n                        });\r\n                        localStorage.setItem('cachedCurrency', JSON.stringify({\r\n                            setAt: new Date(),\r\n                            currency: this.currency\r\n                        }));\r\n                        observer.next(this.currency);\r\n                        observer.complete();\r\n                    }, (err) => {\r\n                        observer.error(err);\r\n                    });\r\n            }\r\n        });\r\n\r\n        return obs;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/currency.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Discussion } from '../model/model';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class DiscussionService {\r\n\r\n    endpoint = {\r\n        'getDiscussions': AppConstants.ENDPOINT.baseUrl + '/discussions',\r\n        'createDiscussion': AppConstants.ENDPOINT.baseUrl + '/discussions',\r\n        'updateDiscussion': AppConstants.ENDPOINT.baseUrl + '/discussions/{discussionId}',\r\n        'deleteDiscussion': AppConstants.ENDPOINT.baseUrl + '/discussions/{discussionId}',\r\n    };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    getDiscussions() {\r\n        return this.http.get<Discussion[]>(this.endpoint.getDiscussions, { withCredentials: true });\r\n    }\r\n\r\n\r\n    createDiscussion(discussion: Discussion) {\r\n        return this.http.post<Discussion>(this.endpoint.createDiscussion, discussion, { withCredentials: true });\r\n    }\r\n\r\n    updateDiscussion(discussion: Discussion) {\r\n        const url = this.endpoint.updateDiscussion.replace('{discussionId}', discussion._id);\r\n        return this.http.put<Discussion>(url, discussion, { withCredentials: true });\r\n    }\r\n\r\n    deleteDiscussion(discussion: Discussion) {\r\n        const url = this.endpoint.deleteDiscussion.replace('{discussionId}', discussion._id);\r\n        return this.http.delete<Discussion>(url, { withCredentials: true });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/discussion.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { InteractionService } from './interaction.service';\r\n\r\n@Injectable()\r\nexport class ErrorHandlerService {\r\n\r\n  constructor(private interactionService: InteractionService) { }\r\n\r\n  /**\r\n   * Get friendly error messag from error\r\n   * @param err Error object\r\n   */\r\n  getErrorMessage(err) {\r\n    if (err instanceof Error) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      return err.message;\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n\r\n      let errText = '';\r\n      try {\r\n        if (err.error instanceof Array) {\r\n          errText = err.error.join('<br/>');\r\n        } else {\r\n          errText = err.error.toString();\r\n        }\r\n      } catch (ex) {\r\n        errText = `code: ${err.status} | error: ${err.message}`;\r\n      }\r\n\r\n      return errText;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle error\r\n   * @param contextMessage Message regardin the context where the error occured\r\n   * @param err Error object\r\n   * @param autoHide true, to autohide alert error popup\r\n   */\r\n  handleError(contextMessage: string, err, autoHide?: boolean) {\r\n    console.error(contextMessage, err);\r\n    const errMessage = this.getErrorMessage(err);\r\n    const alertText = `${contextMessage} </br> <span> ${errMessage} </span>`;\r\n    this.interactionService.showAlert(alertText, 'danger', autoHide);\r\n    this.interactionService.showLoader(false);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/error-handler.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Portfolio, User, Fund } from '../model/model';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class FundService {\r\n\r\n    endpoint = {\r\n        'getFunds': AppConstants.ENDPOINT.baseUrl + '/portfolio/{portfolioId}/funds',\r\n        'updateFund': AppConstants.ENDPOINT.baseUrl + '/portfolio/{portfolioId}/funds/update',\r\n    };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    getFunds(portfolio: Portfolio) {\r\n        const url = this.endpoint.getFunds.replace('{portfolioId}', portfolio._id);\r\n        return this.http.get<Fund[]>(url, { withCredentials: true });\r\n    }\r\n\r\n\r\n    updateFund(portfolio: Portfolio, fund: Fund) {\r\n        const url = this.endpoint.updateFund.replace('{portfolioId}', portfolio._id);\r\n        return this.http.post<Fund>(url, fund, { withCredentials: true });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/fund.service.ts","import { Injectable } from '@angular/core';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class InteractionService {\r\n\r\n    // properties\r\n    // event callback mapping; key: event name, value: array of registered callbacks\r\n    private callbacks = new Map<string, ((data?: any) => void)[]>();\r\n\r\n    // queued fire callback requests; key: event, value: array of data objects sent\r\n    private queue = new Map<string, any[]>();\r\n\r\n    api = {\r\n        'registerCallback': this.registerCallback,\r\n        'invoke': this.invoke\r\n    };\r\n\r\n    constructor() { }\r\n\r\n    /**\r\n     * Register callback for a specific event\r\n     * @param name name of the event to subscribe to\r\n     * @param callback callback function to be invoked with the event occurs\r\n     * @param clear clear all existing callbacks for the given name\r\n     */\r\n    registerCallback(name: string, callback: (data?: any) => void, clear?: boolean) {\r\n\r\n        // create callback array if it doest not already exist\r\n        if (!this.callbacks[name] || clear) {\r\n            this.callbacks[name] = [];\r\n        }\r\n\r\n        this.callbacks[name].push(callback);\r\n\r\n        // fire any requests already received\r\n        if (this.queue[name]) {\r\n            this.queue[name].forEach(q => {\r\n                this.invoke(name, q);\r\n            });\r\n            this.queue[name] = [];\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Invoke all registered callback for the specified event\r\n     * @param name name of the event\r\n     */\r\n    invoke(name: string, data?: any) {\r\n        // invoke callbacks if exist\r\n        if (this.callbacks[name]) {\r\n            this.callbacks[name].forEach(c => {\r\n                try {\r\n                    c(data);\r\n                } catch (ex) {\r\n                    console.log('Error invoking callback function for event ' + name);\r\n                }\r\n            });\r\n        } else {\r\n            // enqueue request\r\n            if (!this.queue[name]) {\r\n                this.queue[name] = [];\r\n            }\r\n            this.queue[name].push(data);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Show alert\r\n     * @param text alert text\r\n     * @param type alert type. bootstrap context classes are supported\r\n     * @param autoClose auto close after a delay\r\n     */\r\n    showAlert(text: string, type?: string, autoClose?: boolean) {\r\n        this.invoke(AppConstants.EVENTS.showAlert, { text: text, type: type, autoClose: autoClose });\r\n    }\r\n\r\n\r\n    /** Hide Alert */\r\n    hideAlert() {\r\n        this.invoke(AppConstants.EVENTS.hideAlert);\r\n    }\r\n\r\n\r\n    /**\r\n     * Show / hide loading screen\r\n     * @param show true, to show; false, to hide\r\n     */\r\n    showLoader(show: boolean) {\r\n        this.invoke(AppConstants.EVENTS.showLoader, show);\r\n    }\r\n\r\n\r\n    /** Show / hide feeds sidebar\r\n     *  @param show true, to show; false, to hide\r\n     */\r\n    showFeeds() {\r\n        this.invoke(AppConstants.EVENTS.showFeeds);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/interaction.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Portfolio, User } from '../model/model';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class PortfolioService {\r\n\r\n    endpoint = {\r\n        'getPortfolio': AppConstants.ENDPOINT.baseUrl + '/portfolio',\r\n        'createPortfolio': AppConstants.ENDPOINT.baseUrl + '/portfolio',\r\n    };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    getPortfolio() {\r\n        const url = this.endpoint.getPortfolio;\r\n        return this.http.get<Portfolio>(url, { withCredentials: true });\r\n    }\r\n\r\n\r\n    createPortfolio(portfolio: Portfolio) {\r\n        const url = this.endpoint.createPortfolio;\r\n        return this.http.post<Portfolio>(url, portfolio, { withCredentials: true });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/portfolio.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { User } from '../model/model';\r\nimport { AppConstants } from '../app.constants';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    endpoint = {\r\n        'login': AppConstants.ENDPOINT.baseUrl + '/user/login',\r\n        'logout': AppConstants.ENDPOINT.baseUrl + '/user/logout',\r\n        'loggedIn': AppConstants.ENDPOINT.baseUrl + '/user/loggedIn',\r\n        'register': AppConstants.ENDPOINT.baseUrl + '/user/register',\r\n        'createUser': AppConstants.ENDPOINT.baseUrl + '/user',\r\n        'getAllUsers': AppConstants.ENDPOINT.baseUrl + '/user/all',\r\n        'findUserByUsername': AppConstants.ENDPOINT.baseUrl + '/user?username={username}',\r\n        'searchByName': AppConstants.ENDPOINT.baseUrl + '/user/search?name={query}',\r\n        'findUserById': AppConstants.ENDPOINT.baseUrl + '/user/{userId}',\r\n        'findUsersByIds': AppConstants.ENDPOINT.baseUrl + '/user/byIds?userIds={userIds}',\r\n        'updateUser': AppConstants.ENDPOINT.baseUrl + '/user/{userId}',\r\n        'deleteUser': AppConstants.ENDPOINT.baseUrl + '/user/{userId}'\r\n    };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // #region: Authentication\r\n\r\n    /**\r\n     * Login user\r\n     * @param username username\r\n     * @param password password\r\n     * @returns Observable that resolves to the user if the creds match; null other wise\r\n     */\r\n    login(username: string, password: string) {\r\n        const url = this.endpoint.login;\r\n        const creds = {\r\n            username: username,\r\n            password: password\r\n        };\r\n\r\n        return this.http.post<User>(url, creds, { withCredentials: true });\r\n    }\r\n\r\n\r\n    /** Logout user */\r\n    logout() {\r\n        const url = this.endpoint.logout;\r\n        return this.http.post<User>(url, '', { withCredentials: true });\r\n    }\r\n\r\n\r\n    /**\r\n     * Check if current user is logged in\r\n     * @returns Observable that resolves to the logged-in user; null other wise\r\n     * */\r\n    loggedIn() {\r\n        const url = this.endpoint.loggedIn;\r\n        return this.http.get<User>(url, { withCredentials: true });\r\n    }\r\n\r\n    //#endregion: Authentication\r\n\r\n\r\n    /**\r\n     * Get all avaiable users\r\n     * @returns Observable that resolves to the list of available users\r\n     */\r\n    getAllUsers(): Observable<User[]> {\r\n        const url = this.endpoint.getAllUsers;\r\n        return this.http.get<User[]>(url, { withCredentials: true });\r\n    }\r\n\r\n\r\n    /**\r\n     * Search by name\r\n     * @param query comma seperated list of usernames\r\n     * @returns Observable that resolves to the list of users that match the given query\r\n     */\r\n    searchByName(query: string): Observable<User[]> {\r\n        const url = this.endpoint.searchByName.replace('{query}', query);\r\n        return this.http.get<User[]>(url, { withCredentials: true });\r\n    }\r\n\r\n    /**\r\n       * Register new user\r\n       * @param username username\r\n       * @param password password\r\n       * @returns Observable that resolves to newly registered user\r\n       */\r\n    register(username: string, password: string): Observable<User> {\r\n        const url = this.endpoint.register;\r\n        const creds = {\r\n            username: username,\r\n            password: password\r\n        };\r\n\r\n        return this.http.post<User>(url, creds);\r\n    }\r\n\r\n    /**\r\n     * Create new user\r\n     * @param user user\r\n     * @returns Observable that resolves to newly created user\r\n     */\r\n    createUser(user: User) {\r\n        const url = this.endpoint.createUser;\r\n        const creds = {\r\n            username: user.username,\r\n            password: user.password,\r\n            name: user.name,\r\n            email: user.email,\r\n            userType: user.userType || 'user'\r\n        };\r\n\r\n        return this.http.post<User>(url, creds, { withCredentials: true });\r\n    }\r\n\r\n    /**\r\n     * Find user by user id\r\n     * @param userId id of the user\r\n     * @returns Observable that resolves to user with the specifed id; null if id doesn't exist\r\n     */\r\n    findUserById(userId: string): Observable<User> {\r\n        const url = this.endpoint.findUserById.replace('{userId}', userId);\r\n        return this.http.get<User>(url, { withCredentials: true });\r\n    }\r\n\r\n    /**\r\n     * Find users by user ids\r\n     * @param userIds comma seperated list of user ids\r\n     * @returns Observable that resolves to the list of users with the given user ids\r\n     */\r\n    findUsersByIds(userIds: string): Observable<User[]> {\r\n        const url = this.endpoint.findUsersByIds.replace('{userIds}', userIds);\r\n        return this.http.get<User[]>(url, { withCredentials: true });\r\n    }\r\n\r\n\r\n    /**\r\n     * Update user by user id\r\n     * @param {string} userId id of the user\r\n     * @param user updated user object\r\n     * @returns Observable that resolves to updated user object\r\n     */\r\n    updateUser(userId: string, user: User): Observable<User> {\r\n        const url = this.endpoint.updateUser.replace('{userId}', userId);\r\n        return this.http.put<User>(url, user, { withCredentials: true });\r\n    }\r\n\r\n\r\n    /**\r\n     * Delete user by user id\r\n     * @param {string} userId id of the user\r\n     * @returns Observable that resolves to deleted user object\r\n     */\r\n    deleteUser(userId: string): Observable<User> {\r\n        const url = this.endpoint.deleteUser.replace('{userId}', userId);\r\n        return this.http.delete<User>(url, { withCredentials: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","export const environment = {\n  production: true,\n  endpoint: {\n    root: '/',\n    baseUrl: '/api'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}